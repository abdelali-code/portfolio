{"version":3,"sources":["components/Home.js","shared/baseUrl.js","components/About.js","shared/notifications.js","shared/history.js","redux/actionsCreators.js","components/Contact.js","components/Footer.js","components/Loading.js","components/Projects.js","components/Navbar.js","redux/actions.js","components/admin/addProject.js","components/admin/dashboard.js","components/Authentication.js","components/admin/users.js","components/admin/updateProject.js","components/admin/messages.js","components/admin/addSkills.js","components/admin/projects.js","components/admin/skills.js","components/Main.js","redux/reducer/projects.js","redux/reducer/comments.js","redux/reducer/auth.js","redux/reducer/users.js","redux/reducer/skills.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["iconSize","fontSize","Home","className","id","type","href","UserOutlined","style","placement","title","HomeOutlined","ContactsOutlined","ShopOutlined","baseUrl","About","state","useSelector","gutter","lg","sm","xs","Item","orientation","borderColor","skills","map","skill","md","key","src","image","width","height","name","successInfo","msg","message","success","content","warningInfo","warning","createBrowserHistory","validateMessages","required","types","email","tailLayout","wrapperCol","span","offset","SocialMedia","MailFilled","PhoneFilled","fill","LinkedinFilled","Contact","dispatch","useDispatch","useForm","form","initialValues","onFinish","values","console","log","fetch","method","body","JSON","stringify","headers","then","responce","status","Error","statusText","catch","err","resetFields","onFinishFailed","errorInfo","rules","placeholder","TextArea","rows","htmlType","marginTop","Footer","GithubFilled","Loading","RenderProjects","projects","pr","siteUrl","alt","cover","Projects","props","errMess","isLoading","length","Header","Layout","AdminNav","handleClick","activeNav","handleLogout","authentication","isAdmin","mode","onClick","selectedKeys","theme","to","LogoutOutlined","Navbar","useState","setActiveNav","e","localStorage","removeItem","history","push","isAuthenticated","LoginOutlined","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","AddProject","previewVisible","setPreviewVisible","previewImage","setPreviewImage","fileList","setFile","handlePreview","a","url","preview","originFileObj","layout","formData","FormData","append","description","technologies","data","token","getItem","Authorization","ok","json","res","addSinglePrj","addPrj","label","categories","cat","Option","value","listType","onPreview","onChange","beforeUpload","PlusOutlined","visible","footer","onCancel","deleteItem","color","Dashboard","header","bordered","DeleteOutlined","Login","username","password","credentiels","resetForm","response","setItem","admin","size","prefix","Password","LockOutlined","Register","isRegister","setIsRegister","showIcon","firstname","lastname","creds","addUser","columns","dataIndex","Users","selectedRow","setSelectedRow","rowSelection","selectedRowKeys","selectedRows","onConfirm","ids","Accept","removeUser","okText","cancelText","dataSource","users","rowKey","record","UpdateProject","project","projectId","CategoryId","updateProject","render","text","Date","now","parse","createdAt","Comments","removeMessages","comments","AddSkill","addSingleSkill","addSkill","ProjectsLit","confirm","loading","itemLayout","renderItem","item","actions","marginRight","extra","Meta","SkillsList","Main","useEffect","projectsFailed","categoriesFailed","skillsFailed","addUsers","usersFailed","commentFailed","ProtectedUserRoute","Component","component","rest","pathname","from","location","ProtectedAdminRoute","exact","path","SkillList","match","filter","pro","Number","params","prId","projectReducer","action","concat","categoryreducer","commentsReducer","comm","indexOf","Auth","user","usersReducer","usr","skillsReducer","store","createStore","combineReducers","applyMiddleware","thunk","subscribe","getState","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSAOMA,EAAW,CACbC,SAAU,QAyDCC,EAvDF,WACT,OACI,yBAAKC,UAAU,WAAWC,GAAG,QACzB,yBAAKD,UAAU,kBACX,wBAAIA,UAAU,SAAd,cACA,mCAAQ,0BAAMA,UAAU,gBAAhB,qBACR,uBAAGA,UAAU,eAAb,0MAIA,kBAAC,IAAD,CAAQE,KAAK,UAAUF,UAAU,YAC7B,uBAAGG,KAAK,YAAR,gBAAgC,kBAACC,EAAA,EAAD,CAAcC,MAAOR,EAAUG,UAAU,gBAKjF,wBAAIA,UAAU,QACV,kBAAC,IAAD,CAASM,UAAU,UAAUC,MAAM,QAC/B,4BAEI,uBAAGJ,KAAK,SACJ,kBAACK,EAAA,EAAD,SAIZ,kBAAC,IAAD,CAASF,UAAU,UAAUC,MAAM,WAC/B,4BAEI,uBAAGJ,KAAK,YACJ,kBAACC,EAAA,EAAD,SAIZ,kBAAC,IAAD,CAASE,UAAU,UAAUC,MAAM,WAC/B,4BAEI,uBAAGJ,KAAK,cACJ,kBAACM,EAAA,EAAD,SAIZ,kBAAC,IAAD,CAASH,UAAU,UAAUC,MAAM,aAC/B,4BAEI,uBAAGJ,KAAK,cACJ,kBAACO,EAAA,EAAD,Y,oDCvDfC,EAAU,yBCmFRC,EA7ED,WACV,IAAMC,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KAEnC,OACI,6BAASb,UAAU,gBAAgBC,GAAG,WAClC,yBAAKD,UAAU,aACX,wBAAIA,UAAU,wBAAd,SAA2C,0BAAMA,UAAU,WAAhB,OAC3C,8CACA,kBAAC,IAAD,CAAKe,OAAQ,CAAC,GAAI,IAAKf,UAAU,iBAC7B,kBAAC,IAAD,CAAKgB,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACpB,kBAAC,IAAD,CAAMlB,UAAU,aACZ,kBAAC,IAAKmB,KAAN,CAAWnB,UAAU,YAAW,0BAAMA,UAAU,OAAhB,gBAAhC,aACA,kBAAC,IAAKmB,KAAN,CAAWnB,UAAU,YAAW,0BAAMA,UAAU,OAAhB,eAAhC,aACA,kBAAC,IAAKmB,KAAN,CAAWnB,UAAU,YAAW,0BAAMA,UAAU,OAAhB,iBAAhC,aACA,kBAAC,IAAKmB,KAAN,CAAWnB,UAAU,YAAW,0BAAMA,UAAU,OAAhB,eAAhC,gBAGR,kBAAC,IAAD,CAAKgB,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACpB,kBAAC,IAAD,CAAMlB,UAAU,cACZ,kBAAC,IAAKmB,KAAN,CAAWnB,UAAU,YAAW,0BAAMA,UAAU,OAAhB,cAAhC,YACA,kBAAC,IAAKmB,KAAN,CAAWnB,UAAU,YAAW,0BAAMA,UAAU,OAAhB,WAAhC,mBACA,kBAAC,IAAKmB,KAAN,CAAWnB,UAAU,YAAW,0BAAMA,UAAU,OAAhB,WAAhC,8BACA,kBAAC,IAAKmB,KAAN,CAAWnB,UAAU,YAAW,0BAAMA,UAAU,OAAhB,eAAhC,aAIZ,kBAAC,IAAD,CAASoB,YAAY,OAAOf,MAAO,CAAEgB,YAAa,aAClD,yBAAKrB,UAAU,mBACX,wBAAIA,UAAU,eAAd,aACA,kBAAC,IAAD,CAAKe,OAAQ,CAAC,GAAI,KACbF,EAAMS,OAAOA,OAAOC,KAAI,SAAAC,GAAK,OAC1B,kBAAC,IAAD,CAAKC,GAAI,EAAGP,GAAI,GAAIlB,UAAU,QAAQ0B,IAAKF,EAAMvB,IAC7C,6BACI,kBAAC,IAAD,CAAO0B,IAAKhB,EAAUa,EAAMI,MAAOC,MAAM,OAAOC,OAAO,UAE3D,0BAAM9B,UAAU,aAAawB,EAAMO,e,yBCnCtDC,EAAc,SAACC,GACxBC,IAAQC,QAAQ,CACZC,QAASH,EACTjC,UAAW,kBAKNqC,EAAc,SAACJ,GACxBC,IAAQI,QAAQ,CACZF,QAASH,EACTjC,UAAW,kB,QChBJuC,mCCggBf,I,qDCvfMC,EAAmB,CACrBC,SAAU,uBACVC,MAAO,CACHC,MAAO,mCAKTC,EAAa,CACfC,WAAY,CACR3B,GAAI,CAAE4B,KAAM,IACZrB,GAAI,CAAEqB,KAAM,GAAIC,OAAQ,KA+F1BC,EAAc,WAChB,OACI,kBAAC,IAAD,CAAKhD,UAAU,sBACX,kBAAC,IAAD,CAAK8C,KAAM,GACP,yCACA,kBAACG,EAAA,EAAD,CAAYjD,UAAU,SACtB,6DAEJ,kBAAC,IAAD,CAAK8C,KAAM,GACP,yCACA,kBAACI,EAAA,EAAD,CAAalD,UAAU,OAAOmD,KAAK,QACnC,+CAEJ,kBAAC,IAAD,CAAKL,KAAM,GACP,4CACA,uBAAG3C,KAAK,uBACJ,kBAACiD,EAAA,EAAD,CAAgBpD,UAAU,UAE9B,+CA6FDqD,EA1MC,WAEZ,IAAMC,EAAWC,cAFC,EAYHC,oBAARC,EAZW,oBAalB,OACI,6BAASzD,UAAU,2BAA2BC,GAAG,aAC7C,yBAAKD,UAAU,aAEX,wBAAIA,UAAU,wBAAd,UAA4C,0BAAMA,UAAU,WAAhB,UAC5C,kBAAC,EAAD,MACA,+DAGA,kBAAC,IAAD,CACIA,UAAU,OACVyD,KAAMA,EACNZ,WAAY,CACR3B,GAAI,CAAE4B,KAAM,IACZrB,GAAI,CAAEqB,KAAM,KAEhBf,KAAK,UACL2B,cAAe,CACX3B,KAAM,GACNY,MAAO,GACPT,QAAS,IAEbyB,SAhCC,SAACC,GDyHK,IAAC1B,ECxHpB2B,QAAQC,IAAI,WAAYF,GACxBN,GDuHoBpB,ECvHC0B,EDuHW,SAAAN,GACpC,OAAOS,gBAAMpD,EAAU,WAAY,CAC/BqD,OAAQ,OACRC,KAAMC,KAAKC,UAAUjC,GACrBkC,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GACF,GAAIA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC5C,OAAOD,EAGP,MADU,IAAIE,MAAM,WAAaF,EAASC,OAAS,IAAMD,EAASG,eAIzEJ,MAAK,SAACC,GAEHtC,EAAY,sCAEf0C,OAAM,SAAAC,GACHtC,EAAYsC,EAAIzC,eC3IpBuB,EAAKmB,eA8BOC,eA3BO,SAACC,GACpBjB,QAAQC,IAAI,UAAWgB,IA2BXtC,iBAAkBA,GAElB,kBAAC,IAAKrB,KAAN,iBACQyB,EADR,CAEIb,KAAK,OACLgD,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,IAAD,CAAOuC,YAAY,YAAYhF,UAAU,kBAG7C,kBAAC,IAAKmB,KAAN,iBACQyB,EADR,CAEIb,KAAK,QACLgD,MAAO,CACH,CACItC,UAAU,EACVvC,KAAM,YAId,kBAAC,IAAD,CAAO8E,YAAY,aAAahF,UAAU,kBAG9C,kBAAC,IAAKmB,KAAN,iBACQyB,EADR,CAEIb,KAAK,UACLgD,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,IAAMwC,SAAP,CAAgBD,YAAY,eAAeE,KAAM,EAAGlF,UAAU,kBAGlE,kBAAC,IAAKmB,KACEyB,EAEJ,kBAAC,IAAD,CAAQ1C,KAAK,UAAUiF,SAAS,SAASnF,UAAU,OAAnD,qB,SCrGlBK,EAAQ,CACVP,SAAU,OACVsF,UAAW,QAgBAC,EAZA,WACX,OACI,gCACI,uDACA,yBAAKrF,UAAU,uBACX,uBAAGG,KAAK,sBAAqB,kBAACmF,EAAA,EAAD,CAActF,UAAU,OAAOK,MAAOA,KACnE,uBAAGF,KAAK,uBAAsB,kBAACiD,EAAA,EAAD,CAAgBpD,UAAU,OAAOK,MAAOA,Q,SCJvEkF,EAPC,WACZ,OACI,yBAAKvF,UAAU,eAAf,mBCDFwF,EAAiB,SAAC,GAmBpB,OAnBqC,EAAfC,SAEDlE,KAAI,SAAAmE,GACrB,OACI,kBAAC,IAAD,CAAKjE,GAAI,GAAIzB,UAAU,UAAU0B,IAAKgE,EAAGzF,IACrC,uBAAGE,KAAMuF,EAAGC,QAASC,IAAKF,EAAGnF,OACzB,kBAAC,IAAD,CACIP,UAAU,cACVK,MAAO,CAAEwB,MAAO,OAAQC,OAAQ,KAChC+D,MAAO,yBAAKD,IAAI,UAAUjE,IAAKhB,EAAU+E,EAAG9D,MAAOvB,MAAO,CAAEwB,MAAO,OAAQC,OAAQ,SAGvF,yBAAK9B,UAAU,gBACV0F,EAAGnF,aA8CbuF,EAnCE,SAACC,GAAW,IACjBN,EAAiCM,EAAjCN,SAAUO,EAAuBD,EAAvBC,QAElB,OAFyCD,EAAdE,UAInB,kBAAC,EAAD,MAGCD,EAGD,yBAAKhG,UAAU,2BACVgG,GAIJP,EAASS,OAAS,EAEnB,6BAASlG,UAAU,6BAA6BC,GAAG,aAC/C,yBAAKD,UAAU,aACX,wBAAIA,UAAU,wBAAd,MAAwC,0BAAMA,UAAU,WAAhB,cACxC,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAKe,OAAQ,CAAC,GAAI,KACd,kBAAC,EAAD,CAAgB0E,SAAUA,QAQvC,M,mDCtCPU,GAAWC,IAAXD,OAGFtG,GAAW,CACbC,SAAU,QAoFRuG,GAAW,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAExC,OAFkE,EAAZ3F,MAE5C4F,eAAeC,QAEjB,kBAAC,IAAD,CAAMC,KAAK,aAAaC,QAASN,EAAaO,aAAc,CAACN,GAAYvG,UAAU,WAAW8G,MAAM,QAChG,kBAAC,IAAK3F,KAAN,CAAWO,IAAI,OAAO1B,UAAU,aAC5B,kBAAC,IAAD,CAAM+G,GAAG,KACL,kBAACvG,EAAA,EAAD,CAAcH,MAAOR,KACrB,0BAAMG,UAAU,SAAhB,WAGR,kBAAC,IAAKmB,KAAN,CAAWO,IAAI,YAAY1B,UAAU,aACjC,kBAAC,IAAD,CAAM+G,GAAG,cACL,kBAACrG,EAAA,EAAD,CAAcL,MAAOR,KACrB,0BAAMG,UAAU,SAAhB,eAGR,kBAAC,IAAKmB,KAAN,CAAWO,IAAI,SAAS1B,UAAU,YAAY4G,QAASJ,GACnD,kBAACQ,EAAA,EAAD,CAAgB3G,MAAOR,KACvB,0BAAMG,UAAU,SAAhB,YAMJ,MAGDiH,GA9GA,SAAClB,GAAU,MAGYmB,mBAAS,QAHrB,mBAGfX,EAHe,KAGJY,EAHI,KAIhBb,EAAc,SAAAc,GAChBD,EAAaC,EAAE1F,MAIbb,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KAC7ByC,EAAWC,cACXiD,EAAe,WACjBlD,GL0XoB,SAAAA,GACxBA,EAXyB,CACzBpD,KM/X0B,mBN0Y1BmH,aAAaC,WAAW,SACxBD,aAAaC,WAAW,SACxBD,aAAaC,WAAW,YACxBC,EAAQC,KAAK,UAEblE,EAbyB,CACzBpD,KMlY0B,uBDe1B,OACI,kBAACiG,GAAD,CAAQnG,UAAU,UACd,yBAAKA,UAAU,QAAO,kBAAC,IAAD,CAAM+G,GAAG,KAAI,mCAAb,MAEpBlG,EAAM4F,eAAeC,QAyDnB,kBAAC,GAAD,CAAUJ,YAAaA,EAAaC,UAAWA,EAAWC,aAAcA,EAAc3F,MAAOA,IAxD7F,kBAAC,IAAD,CAAM8F,KAAK,aAAaC,QAASN,EAAaO,aAAc,CAACN,GAAYvG,UAAU,WAAW8G,MAAM,QAChG,kBAAC,IAAK3F,KAAN,CAAWO,IAAI,OAAO1B,UAAU,aAC5B,kBAAC,IAAD,CAAM+G,GAAG,KACL,kBAACvG,EAAA,EAAD,CAAcH,MAAOR,KACrB,0BAAMG,UAAU,SAAhB,WA4BR,kBAAC,IAAKmB,KAAN,CAAWO,IAAI,OAAO1B,UAAU,aAC5B,kBAAC,IAAD,CAAM+G,GAAG,SACL,kBAACrG,EAAA,EAAD,CAAcL,MAAOR,KACrB,0BAAMG,UAAU,SAAhB,UAGNa,EAAM4F,eAAegB,gBASnB,kBAAC,IAAKtG,KAAN,CAAWO,IAAI,SAAS1B,UAAU,YAAY4G,QAASJ,GAEnD,kBAACQ,EAAA,EAAD,CAAgB3G,MAAOR,KACvB,0BAAMG,UAAU,SAAhB,WAVJ,kBAAC,IAAKmB,KAAN,CAAWO,IAAI,QAAQ1B,UAAU,aAC7B,kBAAC,IAAD,CAAM+G,GAAG,UACL,kBAACW,EAAA,EAAD,CAAerH,MAAOR,KACtB,0BAAMG,UAAU,SAAhB,c,gFElF1BwC,GAAmB,CACrBC,SAAU,wBAIRG,GAAa,CACfC,WAAY,CACR3B,GAAI,CAAE4B,KAAM,IACZrB,GAAI,CAAEqB,KAAM,MAKpB,SAAS6E,GAAUC,GACf,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAAAC,GAAK,OAAIP,EAAOO,OAMzC,IA2LeC,GA3LI,SAACxC,GAAW,IAAD,EAEkBmB,oBAAS,GAF3B,mBAEnBsB,EAFmB,KAEHC,EAFG,OAGcvB,mBAAS,IAHvB,mBAGnBwB,EAHmB,KAGLC,EAHK,OAIEzB,mBAAS,IAJX,mBAInB0B,EAJmB,KAITC,EAJS,KAKpBvF,EAAWC,cAOXuF,EAAa,yCAAG,WAAMlB,GAAN,UAAAmB,EAAA,yDACbnB,EAAKoB,KAAQpB,EAAKqB,QADL,gCAEOtB,GAAUC,EAAKsB,eAFtB,OAEdtB,EAAKqB,QAFS,cAIlBN,EAAgBf,EAAKoB,KAAOpB,EAAKqB,SACjCR,GAAkB,GALA,2CAAH,sDAZO,EA6CXjF,oBAARC,EA7CmB,oBAiD1B,OACI,6BAASzD,UAAU,cACf,kBAAC,KAAD,CAAYA,UAAU,cAClB,kBAAC,KAAWmB,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,cAAT,cAEJ,kBAAC,KAAW5F,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,uBAAT,aAEJ,kBAAC,KAAW5F,KAAZ,aAIJ,yBAAKnB,UAAU,kBACX,kBAAC,IAAD,CACImJ,OAAO,WACPnJ,UAAU,OACVyD,KAAMA,EACNZ,WAAY,CACR3B,GAAI,CAAE4B,KAAM,IACZrB,GAAI,CAAEqB,KAAM,KAEhBf,KAAK,QACL4B,SA3CC,SAACC,GACdC,QAAQC,IAAIF,GACZ,IAAMwF,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAAS1F,EAAOrD,OAChC6I,EAASE,OAAO,cAAe1F,EAAO2F,aACtCH,EAASE,OAAO,UAAW1F,EAAO+B,SAClCyD,EAASE,OAAO,eAAgB1F,EAAO4F,cACnCZ,EAAS1C,OAAS,GAClBkD,EAASE,OAAO,QAASV,EAAS,GAAGM,eAEzC5F,EPbc,SAACmG,EAAM7E,EAAaiE,GAApB,OAAgC,SAAAvF,GAClD,IAAMoG,EAAQrC,aAAasC,QAAQ,SACnC,OAAO5F,gBAAMpD,EAAU,WAAY,CAC/BqD,OAAQ,OACRI,QAAS,CAELwF,cAAe,UAAYF,GAE/BzF,KAAMwF,IAGLpF,MAAK,SAAC+D,GACH,IAAKA,EAAOyB,GAGR,MAFAhG,QAAQC,IAAIsE,GACF,IAAI5D,MAAM,SAAW4D,EAAO3D,WAAa,IAAM2D,EAAO7D,QAKpE,OADAK,IACOwD,EAAO0B,UAEjBzF,MAAK,SAAC0F,GACHzG,EAjCS,SAACmG,GAAD,MAAW,CAC5BvJ,KM5CmB,UN6CnBuJ,KAAMA,GA+BWO,CAAaD,IACtBlB,EAAQ,IACR7G,EAAY,gCAEf0C,OAAM,SAAAC,GAAStC,EAAYsC,EAAIzC,aObvB+H,CAAOb,EAAU3F,EAAKmB,YAAaiE,KAkChChE,eA/BO,SAACC,GACpBjB,QAAQC,IAAI,UAAWgB,IA+BXtC,iBAAkBA,IAElB,kBAAC,IAAKrB,KAAN,iBACQyB,GADR,CAEIsH,MAAM,QACNnI,KAAK,QACLgD,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,IAAD,CAAOuC,YAAY,gBAAgBhF,UAAU,kBAGjD,kBAAC,IAAKmB,KAAN,iBACQyB,GADR,CAEIsH,MAAM,sBACNnI,KAAK,gBAOL,kBAAC,IAAMkD,SAAP,CAAgBD,YAAY,sBAAsBE,KAAM,EAAGlF,UAAU,kBAGzE,kBAAC,IAAKmB,KAAN,iBACQyB,GADR,CAEIb,KAAK,UACLmI,MAAM,yBACNnF,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,IAAD,CAAOuC,YAAY,0BAA0BhF,UAAU,kBAG3D,kBAAC,IAAKmB,KAAN,iBACQyB,GADR,CAEIb,KAAK,eACLmI,MAAM,oCACNnF,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,IAAD,CAAOuC,YAAY,oCAAoChF,UAAU,kBAIrE,kBAAC,IAAKmB,KAAN,iBACQyB,GADR,CAEIb,KAAK,aACLmI,MAAM,WACNnF,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,KAAD,KACKsD,EAAMoE,WAAW5I,KAAI,SAAC6I,GAAD,OAClB,kBAAC,KAAOC,OAAR,CAAe3I,IAAK0I,EAAInK,GAAIqK,MAAOF,EAAInK,IAAKmK,EAAIrI,WAM5D,kBAAC,IAAKZ,KAAN,iBACQyB,GADR,CAEIb,KAAK,UAEL,kBAAC,KAAD,CACIwI,SAAS,eACT3B,SAAUA,EACV4B,UAAW1B,EACX2B,SAvIH,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SACpBC,EAAQD,GACR/E,QAAQC,IAAI8E,EAAS,GAAGM,gBAsIJwB,aAAc,kBAAM,IAEnB9B,EAAS1C,QAAU,EAAI,KAAO,iCAAM,kBAACyE,GAAA,EAAD,MAAgB,yBAAKtK,MAAO,CAAE+E,UAAW,IAAzB,WAIzD,kBAAC,KAAD,CACIwF,QAASpC,EACTqC,OAAQ,KACRC,SA5JH,kBAAMrC,GAAkB,KA8JrB,yBAAK7C,IAAI,UAAUvF,MAAO,CAAEwB,MAAO,QAAUF,IAAK+G,MAK1D,kBAAC,IAAKvH,KACEyB,GAEJ,kBAAC,IAAD,CAAQuC,SAAS,SAASjF,KAAK,WAA/B,Y,UCvMlB6K,GAAa,CACfC,MAAO,MACPlL,SAAU,oBA6CCmL,GA3CG,WAEd,OAEI,0BAAMjL,UAAU,QACZ,yBAAKA,UAAU,aACX,mDACA,kBAAC,IAAD,CACIkL,OAAQ,yBAAKlL,UAAU,SAAf,kBACRmL,UAAQ,EACRnL,UAAU,SAEV,kBAAC,IAAKmB,KAAN,KACI,kBAAC,IAAD,CAAM4F,GAAG,oBAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,oBAAmB,kBAACqE,GAAA,EAAD,CAAgB/K,MAAO0K,KAAnD,UACA,kBAAC,IAAD,CAAMhE,GAAG,wBAAuB,kBAAC4D,GAAA,EAAD,MAAhC,QAGJ,kBAAC,IAAKxJ,KAAN,KACI,kBAAC,IAAD,CAAM4F,GAAG,uBAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,uBAAsB,kBAACqE,GAAA,EAAD,CAAgB/K,MAAO0K,KAAtD,UACA,kBAAC,IAAD,CAAMhE,GAAG,2BAA0B,kBAAC4D,GAAA,EAAD,MAAnC,QAGJ,kBAAC,IAAKxJ,KAAN,KACI,kBAAC,IAAD,CAAM4F,GAAG,uBAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,uBAAsB,kBAACqE,GAAA,EAAD,CAAgB/K,MAAO0K,KAAtD,UACA,kBAAC,IAAD,CAAMhE,GAAG,uBAAsB,kBAAC4D,GAAA,EAAD,MAA/B,QAGJ,kBAAC,IAAKxJ,KAAN,KACI,kBAAC,IAAD,CAAM4F,GAAG,qBAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,qBAAoB,kBAACqE,GAAA,EAAD,CAAgB/K,MAAO0K,KAApD,UACA,kBAAC,IAAD,CAAMhE,GAAG,yBAAwB,kBAAC4D,GAAA,EAAD,MAAjC,Y,oBCjClBU,GAAQ,WAEV,IAAM/H,EAAWC,cAFD,EAcDC,oBAARC,EAdS,oBAgBhB,OACI,6BAASzD,UAAU,QACf,yBAAKA,UAAU,aACX,kBAAC,IAAD,CACIyD,KAAMA,EACN1B,KAAK,QACL/B,UAAU,WACV0D,cAAe,CACX4H,SAAU,GACVC,SAAU,IAEd5H,SAxBC,SAACC,GT+VG,IAAC4H,EAAaC,ES9V/B5H,QAAQC,IAAIF,GACZN,GT6VkBkI,ES7VC5H,ET6VY6H,ES7VJhI,EAAKmB,YT6Va,SAAAtB,GAIjD,OAHAA,EAjBiC,CACjCpD,KM1UyB,gBN2UzBuJ,KAe0B+B,EAAYF,WAG/BvH,gBAAMpD,EAAU,cAAe,CAClCqD,OAAQ,OACRC,KAAMC,KAAKC,UAAUqH,GACrBpH,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAC0F,GAEL,GADAlG,QAAQC,IAAIiG,GACRA,EAAIxF,QAAU,KAAOwF,EAAIxF,OAAS,IAClC,OAAOwF,EAEN,GAAmB,MAAfA,EAAIxF,OAET,MADU,IAAIC,MAAM,sCAIxB,MADU,IAAIA,MAAM,UAAYuF,EAAIxF,OAAS,MAAQwF,EAAItF,eAE1DJ,MAAK,SAACqH,GAEL,OADA7H,QAAQC,IAAI4H,GACLA,EAAS5B,UACjBzF,MAAK,SAAC0F,GACL,IAAIA,EAAI5H,QAUJ,MADU,IAAIqC,MAAM,QAASuF,EAAI7H,SARjCmF,aAAasE,QAAQ,QAAS5B,EAAIL,OAClCrC,aAAasE,QAAQ,QAAS5B,EAAI6B,OAClCvE,aAAasE,QAAQ,WAAYH,EAAYF,UAC7CzH,QAAQC,IAAIuD,aAAasC,QAAQ,aACjCrG,EAxCoB,CAC5BpD,KM/UyB,gBNgVzBuJ,KAsC8BM,IACtB0B,OAML/G,OAAM,SAAAC,GAAG,OAAItC,EAAYsC,EAAIzC,gBS3WhB2C,eAnBO,SAACC,GACpBjB,QAAQC,IAAI,UAAWgB,KAoBX,kBAAC,IAAK3D,KAAN,CACIY,KAAK,WACL/B,UAAU,eACV+E,MAAO,CACH,CACItC,UAAU,EACVP,QAAS,iCAIjB,kBAAC,IAAD,CAAO2J,KAAK,QAAQ7G,YAAY,WAAW8G,OAAQ,kBAAC1L,EAAA,EAAD,MAAkBJ,UAAU,eAGnF,kBAAC,IAAKmB,KAAN,CACInB,UAAU,eACV+B,KAAK,WACLgD,MAAO,CACH,CACItC,UAAU,EACVP,QAAS,iCAIjB,kBAAC,IAAM6J,SAAP,CAAgBF,KAAK,QAAQ7G,YAAY,WAAWhF,UAAU,YAAY8L,OAAQ,kBAACE,GAAA,EAAD,SAGtF,kBAAC,IAAK7K,KAAN,KACI,kBAAC,IAAD,CAAQgE,SAAS,SAASjF,KAAK,UAAUF,UAAU,qBAAnD,WAKR,uBAAGA,UAAU,eAAb,yBAAiD,kBAAC,IAAD,CAAM+G,GAAG,aAAT,gBAS3DvE,GAAmB,CACrBC,SAAU,uBACVC,MAAO,CACHC,MAAO,2BAKTsJ,GAAW,WAAO,IAAD,EACiB/E,oBAAS,GAD1B,mBACZgF,EADY,KACAC,EADA,OAYJ3I,oBAARC,EAZY,oBAanB,OACI,6BAASzD,UAAU,QACf,yBAAKA,UAAU,aAEVkM,EAAa,kBAAC,KAAD,CAAOhK,QAAQ,+BAA+BhC,KAAK,UAAUkM,UAAQ,IAAM,KACzF,kBAAC,IAAD,CACI3I,KAAMA,EACN1B,KAAK,QACL/B,UAAU,WACV0D,cAAe,CACX4H,SAAU,GACVC,SAAU,GACVc,UAAW,GACXC,SAAU,GACV3J,MAAO,IAEXgB,SA1BC,SAACC,IT+LC,SAAC2I,EAAO3H,EAAauH,GACjCpI,gBAAMpD,EAAU,eAAgB,CACnCqD,OAAQ,OACRC,KAAMC,KAAKC,UAAUoI,GACrBnI,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAC0F,GAIH,OAHIA,EAAIF,IACJjF,IAEGmF,EAAID,UACZzF,MAAK,SAAC0F,GAEDA,EAAI5H,QACJgK,GAAc,GAId9J,EAAY0H,EAAI7H,YAErBwC,OAAM,SAAAC,GACLtC,EAAYsC,EAAIzC,YSrNpBsK,CAAQ5I,EAAQH,EAAKmB,YAAauH,IA0BtBtH,eAvBO,SAACC,GACpBjB,QAAQC,IAAI,UAAWgB,IAuBXtC,iBAAkBA,IAGlB,kBAAC,IAAKrB,KAAN,CACIY,KAAK,WACL/B,UAAU,eACV+E,MAAO,CACH,CACItC,UAAU,KAIlB,kBAAC,IAAD,CAAOoJ,KAAK,QAAQ7G,YAAY,WAAWhF,UAAU,eAGzD,kBAAC,IAAKmB,KAAN,CACIY,KAAK,YACL/B,UAAU,eACV+E,MAAO,CACH,CACItC,UAAU,KAIlB,kBAAC,IAAD,CAAOoJ,KAAK,QAAQ7G,YAAY,YAAYhF,UAAU,eAG1D,kBAAC,IAAKmB,KAAN,CACIY,KAAK,WACL/B,UAAU,eACV+E,MAAO,CACH,CACItC,UAAU,KAIlB,kBAAC,IAAD,CAAOoJ,KAAK,QAAQ7G,YAAY,WAAWhF,UAAU,eAEzD,kBAAC,IAAKmB,KAAN,CACIY,KAAK,QACL/B,UAAU,eACV+E,MAAO,CACH,CACItC,UAAU,EACVvC,KAAM,WAId,kBAAC,IAAD,CAAO2L,KAAK,QAAQ7G,YAAY,QAAQhF,UAAU,eAItD,kBAAC,IAAKmB,KAAN,CACInB,UAAU,eACV+B,KAAK,WACLgD,MAAO,CACH,CACItC,UAAU,KAIlB,kBAAC,IAAMsJ,SAAP,CAAgBF,KAAK,QAAQ7G,YAAY,WAAWhF,UAAU,eAGlE,kBAAC,IAAKmB,KAAN,KACI,kBAAC,IAAD,CAAQgE,SAAS,SAASjF,KAAK,UAAUF,UAAU,qBAAnD,cAKR,uBAAGA,UAAU,eAAb,mBAA2C,kBAAC,IAAD,CAAM+G,GAAG,UAAT,a,sCCxLrD0F,GAAU,CACZ,CACIlM,MAAO,WACPmM,UAAW,YAGf,CACInM,MAAO,YACPmM,UAAW,aAEf,CACInM,MAAO,WACPmM,UAAW,YAEf,CAEInM,MAAO,cACPmM,UAAW,gBAmEJC,GA9DD,WAAO,IAAD,EAEsBzF,mBAAS,IAF/B,mBAET0F,EAFS,KAEIC,EAFJ,KAIVvJ,EAAWC,cACXuJ,EAAe,CACjBrC,SAAU,SAACsC,EAAiBC,GACxBH,EAAeE,KAcjBlM,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KACnC,OACI,0BAAMb,UAAU,QACZ,kBAAC,KAAD,CAAYA,UAAU,cAClB,kBAAC,KAAWmB,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,cAAT,cAEJ,kBAAC,KAAW5F,KAAZ,eAIJ,yBAAKnB,UAAU,aACX,sCACA,kBAAC,IAAD,MACA,yBAAKA,UAAU,UACX,kBAAC,KAAD,CACIO,MAAM,uBACN0M,UA1BJ,WVoRO,IAACC,EUnRpB5J,GVmRoB4J,EUnRCN,EVmRO,SAAAtJ,GAChCO,QAAQC,IAAI,OAAQoJ,GACpB,IAAMxD,EAAQrC,aAAasC,QAAQ,SACnC,OAAO5F,gBAAMpD,EAAU,QAAS,CAC5BqD,OAAQ,SACRI,QAAS,CACL+I,OAAQ,mBACR,eAAgB,mBAChBvD,cAAe,UAAYF,GAE/BzF,KAAMC,KAAKC,UAAU+I,KACtB7I,MAAK,SAAC0F,GACL,GAAIA,EAAIF,GACJ,OAAOE,EAAID,OAGf,MADU,IAAItF,MAAM,SAAWuF,EAAItF,WAAa,IAAMsF,EAAIxF,WAE3DF,MAAK,SAAC0F,GACDA,EAAM,GACNzG,EAxBO,SAAC4J,GAAD,MAAU,CACzBhN,KMxRuB,cNyRvBuJ,KAAMyD,GAsBWE,CAAWF,IACpBlL,EAAY,+BAGZK,EAAY,oCAGfqC,OAAM,SAACC,GAAD,OAAStC,EAAYsC,EAAIzC,gBUnRhB4I,SAvBL,WACX+B,KAuBgBQ,OAAO,SACPC,WAAW,MAEX,kBAAC,IAAD,CAAQtN,UAAU,UAAlB,WARR,oBAUA,kBAAC,KAAD,CACI8M,aAAY,cACR5M,KAAM,YACH4M,GAEPL,QAASA,GACTc,WAAY1M,EAAM2M,MAAMA,MACxBC,OAAQ,SAAAC,GAAM,OAAIA,EAAOzN,SCxEvCuC,GAAmB,CACrBC,SAAU,wBAIRG,GAAa,CACfC,WAAY,CACR3B,GAAI,CAAE4B,KAAM,IACZrB,GAAI,CAAEqB,KAAM,MAKpB,SAAS6E,GAAUC,GACf,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAAAC,GAAK,OAAIP,EAAOO,OAMzC,IA2LeqF,GA3LO,SAAC5H,GAAW,IAAD,EACemB,oBAAS,GADxB,mBACtBsB,EADsB,KACNC,EADM,OAEWvB,mBAAS,IAFpB,mBAEtBwB,EAFsB,KAERC,EAFQ,OAGDzB,mBAAS,IAHR,mBAGtB0B,EAHsB,KAGZC,EAHY,KAIvBvF,EAAWC,cAOXuF,EAAa,yCAAG,WAAMlB,GAAN,UAAAmB,EAAA,yDACbnB,EAAKoB,KAAQpB,EAAKqB,QADL,gCAEOtB,GAAUC,EAAKsB,eAFtB,OAEdtB,EAAKqB,QAFS,cAIlBN,EAAgBf,EAAKoB,KAAOpB,EAAKqB,SACjCR,GAAkB,GALA,2CAAH,sDAXU,EA4CdjF,oBAARC,EA5CsB,oBA+C7B,OACI,6BAASzD,UAAU,cACf,kBAAC,KAAD,CAAYA,UAAU,cAClB,kBAAC,KAAWmB,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,cAAT,cAEJ,kBAAC,KAAW5F,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,uBAAT,aAEJ,kBAAC,KAAW5F,KAAZ,gBAIJ,yBAAKnB,UAAU,kBACX,+CACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACImJ,OAAO,WACPnJ,UAAU,OACVyD,KAAMA,EACNC,cAAeqC,EAAM6H,QACrB/K,WAAY,CACR3B,GAAI,CAAE4B,KAAM,IACZrB,GAAI,CAAEqB,KAAM,KAEhBf,KAAK,QAEL4B,SA/CC,SAACC,GACdC,QAAQC,IAAI,UAAWF,GACvB,IXyBiB6F,EAAMoE,EWzBjBzE,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAAS1F,EAAOrD,OAChC6I,EAASE,OAAO,cAAe1F,EAAO2F,aACtCH,EAASE,OAAO,UAAW1F,EAAO+B,SAClCyD,EAASE,OAAO,eAAgB1F,EAAO4F,cACnCZ,EAAS1C,OAAS,GAClBkD,EAASE,OAAO,QAASV,EAAS,GAAGM,eAEzCE,EAASE,OAAO,aAAc1F,EAAOkK,YACrCxK,GXgBiBmG,EWhBCL,EXgBKyE,EWhBK9H,EAAM6H,QAAQ3N,GXgBL,SAAAqD,GACzC,IAAMoG,EAAQrC,aAAasC,QAAQ,SACnC,OAAO5F,gBAAMpD,EAAU,YAAckN,EAAW,CAC5C7J,OAAQ,MACRI,QAAS,CACLwF,cAAe,UAAYF,GAE/BzF,KAAMwF,IAEPpF,MAAK,SAAC0F,GACL,GAAIA,EAAIF,GACJ,OAAOE,EAAID,OAGf,MADU,IAAItF,MAAM,SAAWuF,EAAItF,WAAa,IAAMsF,EAAIxF,WAGzDF,MAAK,SAAC0F,GACHlG,QAAQC,IAAI,WAAYiG,GACxBzG,EAtDU,SAACmG,GAAD,MAAW,CAC7BvJ,KMhDsB,aNiDtBuJ,KAAMA,GAoDWsE,CAAchE,IACvB/H,EAAY,kCAEf0C,OAAM,SAAAC,GACHtC,EAAYsC,EAAIzC,gBWDR2C,eAlCO,SAACC,GACpBjB,QAAQC,IAAI,UAAWgB,IAkCXtC,iBAAkBA,IAElB,kBAAC,IAAKrB,KAAN,iBACQyB,GADR,CAEIsH,MAAM,QACNnI,KAAK,QACLgD,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,IAAD,CAAOuC,YAAY,gBAAgBhF,UAAU,kBAGjD,kBAAC,IAAKmB,KAAN,iBACQyB,GADR,CAEIsH,MAAM,sBACNnI,KAAK,gBAOL,kBAAC,IAAMkD,SAAP,CAAgBD,YAAY,sBAAsBE,KAAM,EAAGlF,UAAU,kBAGzE,kBAAC,IAAKmB,KAAN,iBACQyB,GADR,CAEIb,KAAK,UACLmI,MAAM,yBACNnF,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,IAAD,CAAOuC,YAAY,0BAA0BhF,UAAU,kBAG3D,kBAAC,IAAKmB,KAAN,iBACQyB,GADR,CAEIb,KAAK,eACLmI,MAAM,oCACNnF,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,IAAD,CAAOuC,YAAY,oCAAoChF,UAAU,kBAGrE,kBAAC,IAAKmB,KAAN,iBACQyB,GADR,CAEIb,KAAK,aACLmI,MAAM,WACNnF,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,KAAD,KACKsD,EAAMoE,WAAW5I,KAAI,SAAC6I,GAAD,OAClB,kBAAC,KAAOC,OAAR,CAAe3I,IAAK0I,EAAInK,GAAIqK,MAAOF,EAAInK,IAAKmK,EAAIrI,WAM5D,kBAAC,IAAKZ,KACEyB,GAEJ,kBAAC,KAAD,CACI2H,SAAS,eACT3B,SAAUA,EACV4B,UAAW1B,EACX2B,SAxIH,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SACpBC,EAAQD,IAwIY8B,aAAc,kBAAM,IAEnB9B,EAAS1C,QAAU,EAAI,KAAO,iCAAM,kBAACyE,GAAA,EAAD,MAAgB,yBAAKtK,MAAO,CAAE+E,UAAW,IAAzB,WAIzD,kBAAC,KAAD,CACIwF,QAASpC,EACTqC,OAAQ,KACRC,SA7JH,kBAAMrC,GAAkB,KA+JrB,yBAAK7C,IAAI,UAAUvF,MAAO,CAAEwB,MAAO,QAAUF,IAAK+G,MAK1D,kBAAC,IAAKvH,KACEyB,GAEJ,kBAAC,IAAD,CAAQuC,SAAS,SAASjF,KAAK,WAA/B,Y,oBCvMlBuM,GAAU,CACZ,CACIlM,MAAO,OACPmM,UAAW,QAGf,CACInM,MAAO,QACPmM,UAAW,SAEf,CACInM,MAAO,UACPmM,UAAW,UACXsB,OAAQ,SAACC,EAAMP,GAAP,OACJ,kBAAC,KAAD,CAAO7B,KAAK,UACPoC,GACGC,KAAKC,MAAQD,KAAKE,MAAMV,EAAOW,YAAc,IAAQ,KAAQ,GAAK,kBAAC,KAAD,CAAKrD,MAAM,OAAX,OAA6B,SAoEpGsD,GA7DE,WAAO,IAAD,EAEmBpH,mBAAS,IAF5B,mBAEZ0F,EAFY,KAECC,EAFD,KAGbvJ,EAAWC,cACXuJ,EAAe,CACjBrC,SAAU,SAACsC,EAAiBC,GACxBH,EAAeE,KAcjBlM,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KACnC,OACI,0BAAMb,UAAU,QACZ,kBAAC,KAAD,CAAYA,UAAU,cAClB,kBAAC,KAAWmB,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,cAAT,cAEJ,kBAAC,KAAW5F,KAAZ,kBAIJ,yBAAKnB,UAAU,aACX,yCACA,kBAAC,IAAD,MACA,6BACI,kBAAC,KAAD,CACIO,MAAM,uBACN0M,UA1BJ,WZ2KU,IAACC,EY1KvB5J,GZ0KuB4J,EY1KCN,EZ0KO,SAAAtJ,GACnC,IAAMoG,EAAQrC,aAAasC,QAAQ,SACnC,OAAO5F,gBAAMpD,EAAU,WAAY,CAC/BqD,OAAQ,SACRI,QAAS,CACL+I,OAAQ,mBACR,eAAgB,mBAChBvD,cAAe,UAAYF,GAE/BzF,KAAMC,KAAKC,UAAU+I,KAEpB7I,MAAK,SAACC,GACH,GAAIA,EAASuF,GACT,OAAOvF,EAASwF,OAIhB,MADU,IAAItF,MAAM,UAAYF,EAASC,OAAS,MAAQD,EAASG,eAIxEJ,MAAK,SAAC0F,GACDA,EAAM,GACNzG,EA3BO,SAAC4J,GAAD,MAAU,CAC7BhN,KMvM2B,kBNwM3BuJ,KAAMyD,GAyBeqB,CAAerB,IACxBlL,EAAY,kCAGZK,EAAY,uCAGnBqC,OAAM,SAAAC,GAAG,OAAItC,EAAYsC,EAAIzC,gBY7Kd4I,SAvBL,WACX+B,KAuBgBQ,OAAO,SACPC,WAAW,MAEX,kBAAC,IAAD,CAAQtN,UAAU,UAAlB,WARR,oBAUA,kBAAC,KAAD,CACI8M,aAAY,cACR5M,KAAM,YACH4M,GAEPL,QAASA,GACTc,WAAY1M,EAAM2N,SAASA,SAC3Bf,OAAQ,SAAAC,GAAM,OAAIA,EAAOzN,SC5EvCuC,GAAmB,CACrBC,SAAU,wBAIRG,GAAa,CACfC,WAAY,CACR3B,GAAI,CAAE4B,KAAM,IACZrB,GAAI,CAAEqB,KAAM,MAKpB,SAAS6E,GAAUC,GACf,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAAAC,GAAK,OAAIP,EAAOO,OAMzC,IAiIemG,GAjIE,SAAC1I,GAAW,IAAD,EAEoBmB,oBAAS,GAF7B,mBAEjBsB,EAFiB,KAEDC,EAFC,OAGgBvB,mBAAS,IAHzB,mBAGjBwB,EAHiB,KAGHC,EAHG,OAIIzB,mBAAS,IAJb,mBAIjB0B,EAJiB,KAIPC,EAJO,KAKlBvF,EAAWC,cAOXuF,EAAa,yCAAG,WAAMlB,GAAN,UAAAmB,EAAA,yDACbnB,EAAKoB,KAAQpB,EAAKqB,QADL,gCAEOtB,GAAUC,EAAKsB,eAFtB,OAEdtB,EAAKqB,QAFS,cAIlBN,EAAgBf,EAAKoB,KAAOpB,EAAKqB,SACjCR,GAAkB,GALA,2CAAH,sDAZK,EA0CTjF,oBAARC,EA1CiB,oBA8CxB,OACI,6BAASzD,UAAU,QACf,kBAAC,KAAD,CAAYA,UAAU,cAClB,kBAAC,KAAWmB,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,cAAT,cAEJ,kBAAC,KAAW5F,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,qBAAT,WAEJ,kBAAC,KAAW5F,KAAZ,aAIJ,yBAAKnB,UAAU,aACX,0CACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACImJ,OAAO,WACPnJ,UAAU,OACVyD,KAAMA,EACNZ,WAAY,CACR3B,GAAI,CAAE4B,KAAM,IACZrB,GAAI,CAAEqB,KAAM,KAEhBf,KAAK,WACL4B,SA1CC,SAACC,GACdC,QAAQC,IAAIF,GACZ,IAAMwF,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ1F,EAAO7B,MAC3B6G,EAAS1C,OAAS,GAClBkD,EAASE,OAAO,QAASV,EAAS,GAAGM,eAEzC5F,EbwcgB,SAACmG,EAAM7E,EAAaiE,GAApB,OAAgC,SAAAvF,GACpD,IAAMoG,EAAQrC,aAAasC,QAAQ,SACnC,OAAO5F,gBAAMpD,EAAU,SAAU,CAC7BqD,OAAQ,OACRI,QAAS,CACLwF,cAAe,UAAYF,GAE/BzF,KAAMwF,IAGLpF,MAAK,SAAC+D,GACH,IAAKA,EAAOyB,GAGR,MAFAhG,QAAQC,IAAIsE,GACF,IAAI5D,MAAM,SAAW4D,EAAO3D,WAAa,IAAM2D,EAAO7D,QAKpE,OADAK,IACOwD,EAAO0B,UAEjBzF,MAAK,SAAC0F,GACHzG,EAhCW,SAACmG,GAAD,MAAW,CAC9BvJ,KMtdqB,YNudrBuJ,KAAMA,GA8BWiF,CAAe3E,IACxBlB,EAAQ,IACR7G,EAAY,8BAEf0C,OAAM,SAAAC,GAAStC,EAAYsC,EAAIzC,aajevByM,CAASvF,EAAU3F,EAAKmB,YAAaiE,KAoClChE,eAjCO,SAACC,GACpBjB,QAAQC,IAAI,UAAWgB,IAiCXtC,iBAAkBA,IAElB,kBAAC,IAAKrB,KAAN,iBACQyB,GADR,CAEIsH,MAAM,OACNnI,KAAK,OACLgD,MAAO,CACH,CACItC,UAAU,MAIlB,kBAAC,IAAD,CAAOuC,YAAY,aAAahF,UAAU,kBAI9C,kBAAC,IAAKmB,KAAN,iBACQyB,GADR,CAEIb,KAAK,UAEL,kBAAC,KAAD,CACIwI,SAAS,eACT3B,SAAUA,EACV4B,UAAW1B,EACX2B,SA7EH,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SACpBC,EAAQD,GACR/E,QAAQC,IAAI8E,EAAS,GAAGM,gBA4EJwB,aAAc,kBAAM,IAEnB9B,EAAS1C,QAAU,EAAI,KAAO,iCAAM,kBAACyE,GAAA,EAAD,MAAgB,yBAAKtK,MAAO,CAAE+E,UAAW,IAAzB,WAIzD,kBAAC,KAAD,CACIwF,QAASpC,EACTqC,OAAQ,KACRC,SAlGH,kBAAMrC,GAAkB,KAoGrB,yBAAK7C,IAAI,UAAUvF,MAAO,CAAEwB,MAAO,QAAUF,IAAK+G,MAK1D,kBAAC,IAAKvH,KACEyB,GAEJ,kBAAC,IAAD,CAAQuC,SAAS,SAASjF,KAAK,WAA/B,YCxET0O,GAtEK,SAAC7I,GAEjB,IAAMzC,EAAWC,cACXsL,EAAU,SAAC5O,Gd4GS,IAAC4N,Ec3GvBvK,Gd2GuBuK,Ec3GC5N,Ed2Ga,SAAAqD,GACzC,IAAMoG,EAAQrC,aAAasC,QAAQ,SACnC,OAAO5F,gBAAMpD,EAAU,YAAckN,EAAW,CAC5C7J,OAAQ,SACRI,QAAS,CACL+I,OAAQ,mBACR,eAAgB,mBAChBvD,cAAe,UAAYF,KAEhCrF,MAAK,SAAC0F,GACL,GAAIA,EAAIF,GACJ,OAAOE,EAAID,OAGf,MADU,IAAItF,MAAM,SAAWuF,EAAItF,WAAa,IAAMsF,EAAIxF,WAE3DF,MAAK,WACJf,EApB0B,CAC9BpD,KM7GqB,YN8GrBuJ,KAkB4BoE,IACxB7L,EAAY,mCAEX0C,OAAM,SAACC,GAAD,OAAStC,EAAYsC,EAAIzC,gBc5HpC,OACI,0BAAMlC,UAAU,QACZ,kBAAC,KAAD,CAAYA,UAAU,cAClB,kBAAC,KAAWmB,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,cAAT,cAEJ,kBAAC,KAAW5F,KAAZ,kBAIJ,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,aACX,gDACA,kBAAC,IAAD,CAAQE,KAAK,WACT,kBAAC,IAAD,CAAM6G,GAAG,2BAAT,aAKR,kBAAC,IAAD,MACA,kBAAC,IAAD,CACI/G,UAAU,qBACV8O,QAAS/I,EAAMN,SAASQ,UACxB8I,WAAW,aACXxB,WAAYxH,EAAMN,SAASA,SAC3BuJ,WAAY,SAAAC,GAAI,OACZ,kBAAC,IAAK9N,KAAN,CACI+N,QAAS,CACL,kBAAC,IAAD,CAAMnI,GAAE,qCAAgCkI,EAAKhP,IAAMyB,IAAG,cAASuN,EAAKhP,KAChE,kBAAC,IAAD,CAAQC,KAAK,WAAb,SAEJ,yBAAKwB,IAAG,gBAAWuN,EAAKhP,KACpB,kBAAC,KAAD,CACIK,UAAU,WACVC,MAAK,0CAAqC0O,EAAK1O,MAA1C,KACL0M,UAAW,kBAAM4B,EAAQI,EAAKhP,KAC9BoN,OAAO,MACPC,WAAW,MAEX,kBAAC,IAAD,CAAQtN,UAAU,SAASK,MAAO,CAAE8O,YAAa,SAAjD,aAIZC,MACI,yBACIvN,MAAO,IACPC,OAAQ,IACR8D,IAAKqJ,EAAK1O,MACVoB,IAAKhB,EAAUsO,EAAKrN,SAI5B,kBAAC,IAAKT,KAAKkO,KAAX,CACI9O,MAAO,kBAAC,IAAD,CAAMwG,GAAE,qCAAgCkI,EAAKhP,KAAOgP,EAAK1O,gBCxD1FkM,GAAU,CACZ,CACIlM,MAAO,OACPmM,UAAW,QAGf,CACInM,MAAO,QACPmM,UAAW,QACXsB,OAAQ,SAACC,EAAMP,GAAP,OACJ,yBACI7L,MAAO,IACPC,OAAQ,IACR8D,IAAI,OACJjE,IAAKhB,EAAU+M,EAAO9L,WA6EvB0N,GAtEI,WAAO,IAAD,EAEiBpI,mBAAS,IAF1B,mBAEd0F,EAFc,KAEDC,EAFC,KAGfvJ,EAAWC,cACXuJ,EAAe,CACjBrC,SAAU,SAACsC,EAAiBC,GACxBH,EAAeE,KAcjBlM,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KACnC,OACI,0BAAMb,UAAU,QACZ,kBAAC,KAAD,CAAYA,UAAU,cAClB,kBAAC,KAAWmB,KAAZ,KACI,kBAAC,IAAD,CAAM4F,GAAG,cAAT,cAEJ,kBAAC,KAAW5F,KAAZ,gBAIJ,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,aACX,8CACA,kBAAC,IAAD,CAAQE,KAAK,WACT,kBAAC,IAAD,CAAM6G,GAAG,yBAAT,aAKR,kBAAC,IAAD,MACA,6BACI,kBAAC,KAAD,CACIxG,MAAM,uBACN0M,UAjCJ,WfogBQ,IAACC,EengBrB5J,GfmgBqB4J,EengBCN,EfmgBO,SAAAtJ,GACjCO,QAAQC,IAAI,OAAQoJ,GACpB,IAAMxD,EAAQrC,aAAasC,QAAQ,SACnC,OAAO5F,gBAAMpD,EAAU,SAAU,CAC7BqD,OAAQ,SACRI,QAAS,CACL+I,OAAQ,mBACR,eAAgB,mBAChBvD,cAAe,UAAYF,GAE/BzF,KAAMC,KAAKC,UAAU+I,KACtB7I,MAAK,SAAC0F,GACL,GAAIA,EAAIF,GACJ,OAAOE,EAAID,OAGf,MADU,IAAItF,MAAM,SAAWuF,EAAItF,WAAa,IAAMsF,EAAIxF,WAE3DF,MAAK,SAAC0F,GACLlG,QAAQC,IAAIiG,GACRA,EAAM,GACNzG,EA1BoB,CAC5BpD,KM3fwB,eN4fxBuJ,KAwB8ByD,IACtBlL,EAAY,gCAGZK,EAAY,oCAGfqC,OAAM,SAACC,GAAD,OAAStC,EAAYsC,EAAIzC,gBe7fhB4I,SA9BL,WACX+B,KA8BgBQ,OAAO,SACPC,WAAW,MAEX,kBAAC,IAAD,CAAQtN,UAAU,UAAlB,YAIR,kBAAC,KAAD,CACI8M,aAAY,cACR5M,KAAM,YACH4M,GAEPL,QAASA,GACTc,WAAY1M,EAAMS,OAAOA,OACzBmM,OAAQ,SAAAC,GAAM,OAAIA,EAAOzN,SCiC9BsP,GAvGF,WAET,IAAMjM,EAAWC,cACX1C,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KACnCgD,QAAQC,IAAIjD,EAAM4F,eAAeC,SACjC8I,qBAAU,WACNlM,GhBFG,SAAUA,GAEb,OADAA,EAjBuB,CAC3BpD,KMRyB,kBNyBd6D,gBAAMpD,EAAU,YAClB0D,MAAK,SAAC+D,GACH,IAAKA,EAAOyB,GAGR,MAFAhG,QAAQC,IAAIsE,GACF,IAAI5D,MAAM,SAAW4D,EAAO3D,WAAa,IAAM2D,EAAO7D,QAIpE,OAAO6D,EAAO0B,UAEjBzF,MAAK,SAAAC,GAEFhB,EApBiB,CAC7BpD,KMpBwB,eNqBxBuJ,KAkBiCnF,OAExBI,OAAM,SAAAC,GACHrB,EA7BO,SAACqB,GAAD,MAAU,CAC7BzE,KMX2B,kBNY3BuJ,KAAM9E,GA2Be8K,CAAe9K,EAAIzC,gBgBdpCoB,GhBuO6B,SAAAA,GACjC,IAAMoG,EAAQrC,aAAasC,QAAQ,SACnC,OAAO5F,gBAAMpD,EAAU,aAAc,CACjCqD,OAAQ,MACRI,QAAS,CACLwF,cAAe,UAAYF,KAG9BrF,MAAK,SAACC,GACH,GAAIA,EAASuF,GACT,OAAOvF,EAASwF,OAIhB,MADU,IAAItF,MAAM,UAAYF,EAASC,OAAS,MAAQD,EAASG,eAIxEJ,MAAK,SAAC0F,GACLzG,EAtBqB,CAC7BpD,KMhP0B,iBNiP1BuJ,KAoB+BM,OAE1BrF,OAAM,SAAAC,GAAG,OAAIrB,EA5BG,SAACqB,GAAD,MAAU,CAC/BzE,KM3O6B,oBN4O7BuJ,KAAM9E,GA0BqB+K,CAAiB/K,EAAIzC,gBgB1P5CoB,GhB6cG,SAAUA,GAEb,OADAA,EAjBqB,CACzBpD,KMjbuB,gBNkcZ6D,gBAAMpD,EAAU,UAClB0D,MAAK,SAAC+D,GACH,IAAKA,EAAOyB,GAGR,MAFAhG,QAAQC,IAAIsE,GACF,IAAI5D,MAAM,SAAW4D,EAAO3D,WAAa,IAAM2D,EAAO7D,QAIpE,OAAO6D,EAAO0B,UAEjBzF,MAAK,SAAAC,GAEFhB,EApBe,CAC3BpD,KM5bsB,aN6btBuJ,KAkB+BnF,OAEtBI,OAAM,SAAAC,GACHrB,EA7BK,SAACqB,GAAD,MAAU,CAC3BzE,KMpbyB,gBNqbzBuJ,KAAM9E,GA2BegL,CAAahL,EAAIzC,gBgB7d9BrB,EAAM4F,eAAeC,UACrBpD,GhB+ZoB,SAAAA,GAC5BA,EAfwB,CACxBpD,KMjZsB,eNgatB,IAAMwJ,EAAQrC,aAAasC,QAAQ,SAEnC,OAAO5F,gBAAMpD,EAAU,QAAS,CAC5BqD,OAAQ,MACRI,QAAS,CACLwF,cAAe,UAAYF,KAG9BrF,MAAK,SAAC0F,GACH,GAAIA,EAAIxF,QAAU,KAAOwF,EAAIxF,OAAS,IAClC,OAAOwF,EAAID,OAIX,MADU,IAAItF,MAAM,UAAYuF,EAAIxF,OAAS,MAAQwF,EAAItF,eAG9DJ,MAAK,SAACmJ,GACLlK,EA7BK,SAACkK,GAAD,MAAY,CACzBtN,KMtZuB,cNuZvBuJ,KAAM+D,GA2BWoC,CAASpC,OACnB9I,OAAM,SAAAC,GACLrB,EA3BQ,SAACqB,GAAD,MAAU,CAC1BzE,KMxZwB,eNyZxBuJ,KAAM9E,GAyBWkL,CAAYlL,UgBnbrBrB,GhBuJuB,SAAAA,GAC/B,IAAMoG,EAAQrC,aAAasC,QAAQ,SACnC,OAAO5F,gBAAMpD,EAAU,WAAY,CAC/BqD,OAAQ,MACRI,QAAS,CACL+I,OAAQ,mBACR,eAAgB,mBAChBvD,cAAe,UAAYF,KAG9BrF,MAAK,SAACC,GACH,GAAIA,EAASuF,GACT,OAAOvF,EAASwF,OAIhB,MADU,IAAItF,MAAM,UAAYF,EAASC,OAAS,MAAQD,EAASG,eAIxEJ,MAAK,SAAC0F,GACLlG,QAAQC,IAAIiG,GACZzG,EA9BmB,CAC3BpD,KMtK0B,iBNuK1BuJ,KA4B6BM,OAExBrF,OAAM,SAAAC,GAAG,OAAIrB,EA3BA,SAACqB,GAAD,MAAU,CAC5BzE,KMzK2B,kBN0K3BuJ,KAAM9E,GAyBqBmL,CAAcnL,EAAIzC,mBgB5K1C,CAACoB,EAAUzC,EAAM4F,eAAeC,UAEnC,IA6BMqJ,EAAqB,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCACvB,kBAAC,QAAD,iBAAWA,EAAX,CAAiBlC,OAAQ,SAACjI,GAAD,OACpBlF,EAAM4F,eAAegB,gBAEhB,kBAAC,YAAD,CAAUV,GAAI,CACZoJ,SAAU,IACVtP,MAAO,CAAEuP,KAAMrK,EAAMsK,aAHvB,kBAACL,EAAcjK,QAavBuK,EAAsB,SAAC,GAAD,IAAcN,EAAd,EAAGC,UAAyBC,EAA5B,oCAExB,kBAAE,QAAF,iBAAYA,EAAZ,CAAkBlC,OAAQ,SAACjI,GAAD,OAEtBlF,EAAM4F,eAAeC,QACf,kBAACsJ,EAAcjK,GACf,kBAAC,YAAD,CAAUgB,GAAI,CACZoJ,SAAU,SACVtP,MAAO,CAAEuP,KAAMrK,EAAMsK,kBAQrC,OACI,yBAAKrQ,UAAU,OACX,kBAAC,GAAD,MACA,kBAAC,SAAD,KACI,kBAAC,QAAD,CAAOuQ,OAAK,EAACC,KAAK,IAAIP,UAjEhB,WACd,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUxK,SAAU5E,EAAM4E,SAASA,SAC/BO,QAASnF,EAAM4E,SAASO,QACxBC,UAAWpF,EAAM4E,SAASQ,gBA0D9B,kBAAC8J,EAAD,CAAoBQ,OAAK,EAACC,KAAK,SAASP,UAAW5E,KACnD,kBAAC0E,EAAD,CAAoBQ,OAAK,EAACC,KAAK,YAAYP,UAAWhE,KACtD,kBAACqE,EAAD,CAAqBC,OAAK,EAACC,KAAK,aAAaP,UAAWhF,KACxD,kBAACqF,EAAD,CAAqBC,OAAK,EAACC,KAAK,mBAAmBP,UAAWtD,KAC9D,kBAAC2D,EAAD,CAAqBC,OAAK,EAACC,KAAK,sBAAsBP,UAAW,kBAAM,kBAAC,GAAD,CAAaxK,SAAU5E,EAAM4E,cACpG,kBAAC6K,EAAD,CAAqBC,OAAK,EAACC,KAAK,sBAAsBP,UAAW3B,KACjE,kBAACgC,EAAD,CAAqBC,OAAK,EAACC,KAAK,sBAAsBP,UAAW3B,KACjE,kBAACgC,EAAD,CAAqBC,OAAK,EAACC,KAAK,oBAAoBP,UAAWQ,KAC/D,kBAACH,EAAD,CAAqBC,OAAK,EAACC,KAAK,wBAAwBP,UAAWtB,KACnE,kBAAC2B,EAAD,CAAqBC,OAAK,EAACC,KAAK,0BAC5BP,UAAW,kBAAM,kBAAC,GAAD,CAAY9F,WAAYtJ,EAAMsJ,WAAWA,gBAE9D,kBAACmG,EAAD,CAAqBC,OAAK,EAACC,KAAK,mCAAmCP,UA9DnD,SAAC,GAAe,IAAbS,EAAY,EAAZA,MAG3B,OACI,kBAAC,GAAD,CAAe9C,QAAS/M,EAAM4E,SAASA,SAASkL,QAAO,SAACC,GAAD,OAASA,EAAI3Q,KAAO4Q,OAAOH,EAAMI,OAAOC,SAAO,GAClG5G,WAAYtJ,EAAMsJ,WAAWA,gBA0D7B,kBAAC,QAAD,CAAOqG,KAAK,IAAIP,UAAW,iBAAM,oBAErC,kBAAC,EAAD,QClHCe,GAAiB,WAAwE,IAAvEnQ,EAAsE,uDAA9D,CAAEmF,QAAS,KAAMC,WAAW,EAAOR,SAAU,IAAMwL,EAAW,uCACjG,OAAQA,EAAO/Q,MACX,IXLoB,eWMhB,OAAO,6BAAKW,GAAZ,IAAmBmF,QAAS,KAAMC,WAAW,EAAOR,SAAUwL,EAAOxH,OACzE,IXLqB,gBWMjB,OAAO,6BAAK5I,GAAZ,IAAmBoF,WAAW,IAClC,IXNuB,kBWOnB,OAAO,6BAAKpF,GAAZ,IAAmBoF,WAAW,EAAOD,QAASiL,EAAOxH,OACzD,IXPe,UWQX,IAAIhE,EAAW5E,EAAM4E,SAASyL,OAAOD,EAAOxH,MAC5C,OAAO,6BAAK5I,GAAZ,IAAmB4E,SAAUA,IACjC,IXTkB,aWUd,OAAO,6BAAK5E,GAAZ,IAAmB4E,SAAU5E,EAAM4E,SAASkL,QAAO,SAAAjL,GAAE,OAAIA,EAAGzF,KAAOgR,EAAOxH,KAAKxJ,MAAIiR,OAAOD,EAAOxH,QACrG,IXViB,YWWb,OAAO,6BAAK5I,GAAZ,IAAmB4E,SAAU5E,EAAM4E,SAASkL,QAAO,SAAAjL,GAAE,OAAIA,EAAGzF,KAAOgR,EAAOxH,UAC9E,QACI,OAAO5I,IAMNsQ,GAAkB,WAAwD,IAAvDtQ,EAAsD,uDAA9C,CAAEmF,QAAS,KAAMmE,WAAY,IAAM8G,EAAW,uCAClF,OAAQA,EAAO/Q,MACX,IXXsB,iBWYlB,OAAO,6BAAKW,GAAZ,IAAmBmF,QAAS,KAAMmE,WAAY8G,EAAOxH,OACzD,IXZyB,oBWarB,OAAO,6BAAK5I,GAAZ,IAAmBmF,QAASiL,EAAOxH,OACvC,QACI,OAAO5I,IC7BNuQ,GAAkB,WAAsD,IAArDvQ,EAAoD,uDAA5C,CAAEmF,QAAS,KAAMwI,SAAU,IAAMyC,EAAW,uCAChF,OAAQA,EAAO/Q,MACX,IZIsB,iBYHlB,OAAO,6BAAKW,GAAZ,IAAmBmF,QAAS,KAAMwI,SAAUyC,EAAOxH,OACvD,IZIuB,kBYHnB,OAAO,6BAAK5I,GAAZ,IAAmBmF,QAASiL,EAAOxH,OACvC,IZCmB,cYCf,OADA5F,QAAQC,IAAI,eAAgBmN,EAAOxH,MAC5B,6BAAK5I,GAAZ,IAAmB2N,SAAU3N,EAAM2N,SAAS0C,OAAOD,EAAOxH,QAC9D,IZAuB,kBYCnB,OAAO,6BAAK5I,GAAZ,IAAmBmF,QAAS,KAAMwI,SAAU3N,EAAM2N,SAASmC,QAAO,SAAAU,GAAI,OAAsC,IAAlCJ,EAAOxH,KAAK6H,QAAQD,EAAKpR,SACvG,QACI,OAAOY,ICZN0Q,GAAO,WAOL,IAPM1Q,EAOP,uDAPe,CACzBoF,WAAW,EACXwB,kBAAiBJ,aAAasC,QAAQ,SACtCD,MAAOrC,aAAasC,QAAQ,SAC5B6H,KAAMnK,aAAasC,QAAQ,YAActC,aAAasC,QAAQ,YAAc,KAC5E3D,QAAS,KACTU,UAASW,aAAasC,QAAQ,UAAWtC,aAAasC,QAAQ,UAC/DsH,EAAW,uCACV,OAAQA,EAAO/Q,MACX,IbSqB,gBaRjB,OAAO,6BACAW,GADP,IAEIoF,WAAW,EACXwB,iBAAiB,EACjB+J,KAAMP,EAAOxH,OAErB,IbGqB,gBaFjB,OAAO,6BACA5I,GADP,IAEIoF,WAAW,EACXwB,iBAAiB,EACjBzB,QAAS,GACT0D,MAAOuH,EAAOxH,KAAKC,MACnBhD,QAASuK,EAAOxH,KAAKmC,QAE7B,IbLoB,eaMhB,OAAO,6BACA/K,GADP,IAEIoF,WAAW,EACXwB,iBAAiB,EACjBzB,QAASiL,EAAOxH,KAChB+H,KAAM,KACN9K,SAAS,IAEjB,IbXsB,iBaYlB,OAAO,6BACA7F,GADP,IAEIoF,WAAW,IAEnB,IbfsB,iBagBlB,OAAO,6BACApF,GADP,IAEIoF,WAAW,EACXwB,iBAAiB,EACjBzB,QAAS,GACTwL,KAAM,KACN9H,MAAO,GACPhD,SAAS,IAEjB,QACI,OAAO7F,IClDN4Q,GAAe,WAAqE,IAApE5Q,EAAmE,uDAA3D,CAAEmF,QAAS,KAAMC,WAAW,EAAOuH,MAAO,IAAMyD,EAAW,uCAC5F,OAAQA,EAAO/Q,MACX,Id0BmB,cczBf,OAAO,6BAAKW,GAAZ,IAAmBoF,WAAW,EAAOD,QAAS,KAAMwH,MAAOyD,EAAOxH,OACtE,IdyBkB,acxBd,OAAO,6BAAK5I,GAAZ,IAAmBmF,QAAS,KAAMC,WAAW,IACjD,IdwBoB,ecvBhB,OAAO,6BAAKpF,GAAZ,IAAmBmF,QAASiL,EAAOxH,KAAMxD,WAAW,IACxD,IduBmB,cctBf,OAAO,6BAAKpF,GAAZ,IAAmBmF,QAAS,KAAMC,WAAW,EAAOuH,MAAO3M,EAAM2M,MAAMmD,QAAO,SAAAe,GAAG,OAAqC,IAAjCT,EAAOxH,KAAK6H,QAAQI,EAAIzR,SACjH,QACI,OAAOY,ICXN8Q,GAAgB,WAAsE,IAArE9Q,EAAoE,uDAA5D,CAAEmF,QAAS,KAAMC,WAAW,EAAO3E,OAAQ,IAAM2P,EAAW,uCAC9F,OAAQA,EAAO/Q,MACX,IfoCkB,aenCd,OAAO,6BAAKW,GAAZ,IAAmBmF,QAAS,KAAMC,WAAW,EAAO3E,OAAQ2P,EAAOxH,OACvE,IfmCmB,celCf,OAAO,6BAAK5I,GAAZ,IAAmBoF,WAAW,IAClC,IfkCqB,gBejCjB,OAAO,6BAAKpF,GAAZ,IAAmBoF,WAAW,EAAOD,QAASiL,EAAOxH,OACzD,IfiCiB,YehCb,IAAInI,EAAST,EAAMS,OAAO4P,OAAOD,EAAOxH,MACxC,OAAO,6BAAK5I,GAAZ,IAAmBS,OAAQA,IAC/B,If+BoB,ee9BhB,OAAO,6BAAKT,GAAZ,IAAmBS,OAAQT,EAAMS,OAAOqP,QAAO,SAAAjL,GAAE,OAAIA,EAAGzF,KAAOgR,EAAOxH,KAAKxJ,MAAIiR,OAAOD,EAAOxH,QACjG,If8BoB,ee7BhB,OAAO,6BAAK5I,GAAZ,IAAmBS,OAAQT,EAAMS,OAAOqP,QAAO,SAAAjL,GAAE,OAAIA,EAAGzF,KAAOgR,EAAOxH,UAC1E,QACI,OAAO5I,I,oBCVb+Q,I,cCAYC,aACVC,aACI,CACIrM,SAAUuL,GACVxC,SAAU4C,GACVjH,WAAYgH,GACZ1K,eAAgB8K,GAChB/D,MAAOiE,GACPnQ,OAAQqQ,KAEhBI,aAAgBC,QDNxBJ,GAAMK,WAAU,kBAAMpO,QAAQC,IAAI,4BAA6B8N,GAAMM,eAetDC,OAZf,WACE,OACE,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,SAAD,CAAQrK,QAASA,GACf,kBAAC,GAAD,SERY6K,QACW,cAA7BC,OAAOhC,SAASiC,UAEe,UAA7BD,OAAOhC,SAASiC,UAEhBD,OAAOhC,SAASiC,SAAS5B,MACvB,2DCZN6B,IAASvE,OAEP,kBAAC,GAAD,MAEAwE,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvO,MAAK,SAAAwO,GACJA,EAAaC,gBAEdpO,OAAM,SAAA4D,GACLzE,QAAQyE,MAAMA,EAAMpG,c","file":"static/js/main.75e52ac2.chunk.js","sourcesContent":["import { Button, Tooltip } from \"antd\";\r\nimport React from \"react\";\r\nimport { HomeOutlined, UserOutlined, ContactsOutlined, ShopOutlined } from \"@ant-design/icons\";\r\n\r\n\r\n\r\n\r\nconst iconSize = {\r\n    fontSize: \"18px\"\r\n}\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"fontPage\" id=\"home\">\r\n            <div className=\"frontContainer\">\r\n                <h3 className=\"hello\">HI THERE !</h3>\r\n                <h1>I'M <span className=\"name primary\">ElOUDAI ABDELALI</span></h1>\r\n                <p className=\"descritpion\">\r\n                    I'm a Moroccan based && full stack developer focused on crafting clean & user‑friendly experiences,\r\n                    I am passionate about building excellent software that improves the lives of those around me.\r\n                </p>\r\n                <Button type=\"primary\" className=\"btn more\">\r\n                    <a href=\"#aboutUs\">more about me<UserOutlined style={iconSize} className=\"moreIcon\" />\r\n                    </a>\r\n                </Button>\r\n            </div>\r\n            {/* navigation menu */}\r\n            <ul className=\"menu\">\r\n                <Tooltip placement=\"leftTop\" title=\"Home\">\r\n                    <li>\r\n\r\n                        <a href=\"#home\">\r\n                            <HomeOutlined />\r\n                        </a>\r\n                    </li>\r\n                </Tooltip>\r\n                <Tooltip placement=\"leftTop\" title=\"AboutUs\">\r\n                    <li>\r\n\r\n                        <a href=\"#aboutUs\">\r\n                            <UserOutlined />\r\n                        </a>\r\n                    </li>\r\n                </Tooltip>\r\n                <Tooltip placement=\"leftTop\" title=\"Contact\">\r\n                    <li>\r\n\r\n                        <a href=\"#contactUs\">\r\n                            <ContactsOutlined />\r\n                        </a>\r\n                    </li>\r\n                </Tooltip>\r\n                <Tooltip placement=\"leftTop\" title=\"Portfolio\">\r\n                    <li>\r\n\r\n                        <a href=\"#portfolio\">\r\n                            <ShopOutlined />\r\n                        </a>\r\n                    </li>\r\n                </Tooltip>\r\n            </ul>\r\n            {/* end of navigation menu */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","export const baseUrl = \"http://localhost:3001/\";","import React from \"react\";\r\nimport { Col, Divider, List, Row, Image } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\n\r\nconst About = () => {\r\n    const state = useSelector(state => state);\r\n\r\n    return (\r\n        <section className=\"about section\" id=\"aboutUs\">\r\n            <div className=\"container\">\r\n                <h1 className=\"text-center tropBold\">ABOUT <span className=\"primary\">ME</span></h1>\r\n                <h3>Personnel Info</h3>\r\n                <Row gutter={[20, 20]} className=\"personnelInfo\">\r\n                    <Col lg={6} sm={12} xs={24}>\r\n                        <List className=\"firstList\">\r\n                            <List.Item className=\"listItem\"><span className=\"key\">First Name :</span> Abdelali</List.Item>\r\n                            <List.Item className=\"listItem\"><span className=\"key\">Last Name :</span> EL Ouadi</List.Item>\r\n                            <List.Item className=\"listItem\"><span className=\"key\">Nationality :</span> Moroccan</List.Item>\r\n                            <List.Item className=\"listItem\"><span className=\"key\">Freelance :</span> Available</List.Item>\r\n                        </List>\r\n                    </Col>\r\n                    <Col lg={6} sm={12} xs={24}>\r\n                        <List className=\"secondList\">\r\n                            <List.Item className=\"listItem\"><span className=\"key\">Address  :</span> Morocco</List.Item>\r\n                            <List.Item className=\"listItem\"><span className=\"key\">Phone :</span> +2120600000000</List.Item>\r\n                            <List.Item className=\"listItem\"><span className=\"key\">Email :</span> elouadiabdelali@gmail.com</List.Item>\r\n                            <List.Item className=\"listItem\"><span className=\"key\">Langages  :</span> Arabe</List.Item>\r\n                        </List>\r\n                    </Col>\r\n                </Row>\r\n                <Divider orientation=\"left\" style={{ borderColor: \"#5d5d5c\" }} />\r\n                <div className=\"skillsContainer\">\r\n                    <h3 className=\"text-center\">My Skills</h3>\r\n                    <Row gutter={[24, 24]}>\r\n                        {state.skills.skills.map(skill => (\r\n                            <Col md={6} xs={12} className=\"skill\" key={skill.id}>\r\n                                <div>\r\n                                    <Image src={baseUrl + skill.image} width=\"100%\" height=\"100%\" />\r\n                                </div>\r\n                                <span className=\"skillName\">{skill.name}</span>\r\n                            </Col>\r\n                        ))}\r\n\r\n                        {/* <Col md={6} xs={12} className=\"skill\">\r\n                            <div>\r\n                                <Image src=\"/images/css.svg\" width=\"100%\" height=\"100%\" />\r\n                            </div>\r\n                            <span className=\"skillName\">Css</span>\r\n                        </Col>\r\n                        <Col md={6} xs={12} className=\"skill\">\r\n                            <div>\r\n                                <Image src=\"/images/html-5.svg\" width=\"100%\" height=\"100%\" />\r\n                            </div>\r\n                            <span className=\"skillName\">Html</span>\r\n                        </Col>\r\n                        <Col md={6} xs={12} className=\"skill\">\r\n                            <div>\r\n                                <Image src=\"/images/javascript.svg\" width=\"100%\" height=\"100%\" />\r\n                            </div>\r\n                            <span className=\"skillName\">Javascript</span>\r\n                        </Col>\r\n                        <Col md={6} xs={12} className=\"skill\">\r\n                            <div>\r\n                                <Image src=\"/images/nodejs.svg\" width=\"100%\" height=\"100%\" />\r\n                            </div>\r\n                            <span className=\"skillName\">NodeJs</span>\r\n                        </Col>\r\n                        <Col md={6} xs={12} className=\"skill\">\r\n                            <div>\r\n                                <Image src=\"/images/mysql.svg\" width=\"100%\" height=\"100%\" />\r\n                            </div>\r\n                            <span className=\"skillName\">Mysql</span>\r\n                        </Col> */}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default About;","import { message } from \"antd\";\r\n\r\n\r\n\r\n\r\n\r\nexport const successInfo = (msg) => {\r\n    message.success({\r\n        content: msg,\r\n        className: \"messageColor\"\r\n\r\n    });\r\n}\r\n\r\nexport const warningInfo = (msg) => {\r\n    message.warning({\r\n        content: msg,\r\n        className: \"messageColor\"\r\n    });\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import * as Actions from \"./actions\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n// import axios from \"axios\";\r\nimport { fetch } from \"cross-fetch\";\r\nimport { successInfo, warningInfo } from \"../shared/notifications\"\r\nimport history from \"../shared/history\";\r\n\r\n\r\n\r\nconst projectsLoading = () => ({\r\n    type: Actions.LOAD_PROJECTS\r\n})\r\n\r\nconst projectsFailed = (err) => ({\r\n    type: Actions.FAILED_PROJECTS,\r\n    data: err\r\n})\r\n\r\n\r\nconst addProjects = projects => ({\r\n    type: Actions.ADD_PROJECTS,\r\n    data: projects\r\n})\r\n\r\nexport function fetchProjects() {\r\n    return function (dispatch) {\r\n        dispatch(projectsLoading());\r\n        return fetch(baseUrl + \"PROJECTS\")\r\n            .then((result) => {\r\n                if (!result.ok) {\r\n                    console.log(result);\r\n                    let err = new Error(\"Error \" + result.statusText + \" \" + result.status);\r\n                    throw err;\r\n                }\r\n\r\n                return result.json();\r\n            })\r\n            .then(responce => {\r\n\r\n                dispatch(addProjects(responce));\r\n            })\r\n            .catch(err => {\r\n                dispatch(projectsFailed(err.message));\r\n            })\r\n    }\r\n}\r\n\r\nconst addSinglePrj = (data) => ({\r\n    type: Actions.ADD_PRJ,\r\n    data: data\r\n})\r\n\r\nconst updateProject = (data) => ({\r\n    type: Actions.UPDATE_PRJ,\r\n    data: data\r\n})\r\n\r\n\r\nexport const addPrj = (data, resetFields, setFile) => dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"projects\", {\r\n        method: \"POST\",\r\n        headers: {\r\n\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        },\r\n        body: data\r\n\r\n    })\r\n        .then((result) => {\r\n            if (!result.ok) {\r\n                console.log(result);\r\n                let err = new Error(\"Error \" + result.statusText + \" \" + result.status);\r\n                throw err;\r\n            }\r\n            // clear input field;\r\n            resetFields();\r\n            return result.json();\r\n        })\r\n        .then((res) => {\r\n            dispatch(addSinglePrj(res));\r\n            setFile([]);\r\n            successInfo(\"Project added successfuly\");\r\n        })\r\n        .catch(err => { warningInfo(err.message) });\r\n}\r\n\r\n// update a project\r\nexport const updatePr = (data, projectId) => dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"projects/\" + projectId, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        },\r\n        body: data\r\n\r\n    }).then((res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        let err = new Error(\"Error \" + res.statusText + \" \" + res.status);\r\n        throw err;\r\n    })\r\n        .then((res) => {\r\n            console.log(\"updated \", res);\r\n            dispatch(updateProject(res));\r\n            successInfo(\"Project updated successfuly\");\r\n        })\r\n        .catch(err => {\r\n            warningInfo(err.message);\r\n        })\r\n}\r\n\r\nconst deleteSinglePr = (data) => ({\r\n    type: Actions.DELETE_PR,\r\n    data: data\r\n});\r\nexport const deleteProjects = (projectId) => dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"projects/\" + projectId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        }\r\n    }).then((res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        let err = new Error(\"Error \" + res.statusText + \" \" + res.status);\r\n        throw err;\r\n    }).then(() => {\r\n        dispatch(deleteSinglePr(projectId));\r\n        successInfo(\"project deleted successfully\");\r\n    })\r\n        .catch((err) => warningInfo(err.message));\r\n}\r\n\r\n\r\n\r\n// comments\r\nconst addComment = (comment) => ({\r\n    type: Actions.ADD_COMMENT,\r\n    data: comment\r\n})\r\n\r\n\r\nexport const postComment = (message) => dispatch => {\r\n    return fetch(baseUrl + \"messages\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(message),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    })\r\n        .then(responce => {\r\n            if (responce.status >= 200 && responce.status < 300) {\r\n                return responce;\r\n            } else {\r\n                let err = new Error(\"Error : \" + responce.status + \" \" + responce.statusText);\r\n                throw err;\r\n            }\r\n        })\r\n        .then((responce) => {\r\n            // dispatch(addComment(responce.data));\r\n            successInfo(\"Your comment added successfully\");\r\n        })\r\n        .catch(err => {\r\n            warningInfo(err.message);\r\n        })\r\n}\r\n\r\nconst addComments = (data) => ({\r\n    type: Actions.FETCH_COMMENTS,\r\n    data: data\r\n})\r\n\r\nconst commentFailed = (err) => ({\r\n    type: Actions.COMMENTS_FAILED,\r\n    data: err\r\n})\r\nexport const fetchComments = () => dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"messages\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        }\r\n    })\r\n        .then((responce) => {\r\n            if (responce.ok) {\r\n                return responce.json();\r\n            }\r\n            else {\r\n                let err = new Error(\"Error :\" + responce.status + \" : \" + responce.statusText);\r\n                throw err;\r\n            }\r\n\r\n        }).then((res) => {\r\n            console.log(res);\r\n            dispatch(addComments(res));\r\n        })\r\n        .catch(err => dispatch(commentFailed(err.message)));\r\n}\r\n\r\n\r\nconst removeMessages = (ids) => ({\r\n    type: Actions.REMOVE_MESSAGES,\r\n    data: ids\r\n})\r\n\r\nexport const deleteComments = (ids) => dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"messages\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        },\r\n        body: JSON.stringify(ids)\r\n    })\r\n        .then((responce) => {\r\n            if (responce.ok) {\r\n                return responce.json();\r\n            }\r\n            else {\r\n                let err = new Error(\"Error :\" + responce.status + \" : \" + responce.statusText);\r\n                throw err;\r\n            }\r\n\r\n        }).then((res) => {\r\n            if (res > 0) {\r\n                dispatch(removeMessages(ids));\r\n                successInfo(\"messages deleted successfully\");\r\n            }\r\n            else {\r\n                warningInfo(\"please select message from table\");\r\n            }\r\n        })\r\n        .catch(err => warningInfo(err.message));\r\n};\r\n\r\n// categories\r\n\r\n\r\n\r\nconst categoriesFailed = (err) => ({\r\n    type: Actions.FAILED_CATEGORIES,\r\n    data: err\r\n});\r\nconst addCategories = (data) => ({\r\n    type: Actions.ADD_CATEGORIES,\r\n    data: data\r\n})\r\nexport const fetchCategories = () => dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"categories\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        }\r\n    })\r\n        .then((responce) => {\r\n            if (responce.ok) {\r\n                return responce.json();\r\n            }\r\n            else {\r\n                let err = new Error(\"Error :\" + responce.status + \" : \" + responce.statusText);\r\n                throw err;\r\n            }\r\n\r\n        }).then((res) => {\r\n            dispatch(addCategories(res));\r\n        })\r\n        .catch(err => dispatch(categoriesFailed(err.message)));\r\n}\r\n\r\n\r\n\r\n// authentication\r\nexport const addUser = (creds, resetFields, setIsRegister) => {\r\n    return fetch(baseUrl + \"users/signup\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(creds),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                resetFields();\r\n            }\r\n            return res.json();\r\n        }).then((res) => {\r\n            // let tstatus = (res.success) ? \"success\" : \"warning\";\r\n            if (res.success) {\r\n                setIsRegister(true);\r\n\r\n            }\r\n            else {\r\n                warningInfo(res.message);\r\n            }\r\n        }).catch(err => {\r\n            warningInfo(err.message)\r\n        })\r\n}\r\n\r\n\r\nconst removeUser = (ids) => ({\r\n    type: Actions.REMOVE_USER,\r\n    data: ids\r\n})\r\n// delete users\r\nexport const deleteUsers = (ids) => dispatch => {\r\n    console.log(\"ids \", ids);\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"users\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        },\r\n        body: JSON.stringify(ids)\r\n    }).then((res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        let err = new Error(\"Error \" + res.statusText + \" \" + res.status);\r\n        throw err;\r\n    }).then((res) => {\r\n        if (res > 0) {\r\n            dispatch(removeUser(ids));\r\n            successInfo(\"users deleted successfully\");\r\n        }\r\n        else {\r\n            warningInfo(\"please select user from table\");\r\n        }\r\n    })\r\n        .catch((err) => warningInfo(err.message));\r\n}\r\n\r\n\r\n\r\n// login process\r\nconst sendLoginRequest = (creds) => ({\r\n    type: Actions.REQUEST_LOGIN,\r\n    data: creds\r\n})\r\n\r\n\r\nconst loginReceved = (data) => ({\r\n    type: Actions.LOGIN_SUCCESS,\r\n    data: data\r\n})\r\n\r\nconst loginFailed = (errMess) => ({\r\n    type: Actions.LOGIN_FAILED,\r\n    data: errMess\r\n})\r\n\r\nexport const loginUser = (credentiels, resetForm) => dispatch => {\r\n    dispatch(sendLoginRequest(credentiels.username));\r\n    // console.log(credentiels.username);\r\n\r\n    return fetch(baseUrl + \"users/login\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(credentiels),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then((res) => {\r\n        console.log(res);\r\n        if (res.status >= 200 && res.status < 300) {\r\n            return res;\r\n        }\r\n        else if (res.status === 401) {\r\n            let err = new Error(\"username or password are incorrect\");\r\n            throw err;\r\n        }\r\n        let err = new Error(\"Error :\" + res.status + \" : \" + res.statusText);\r\n        throw err;\r\n    }).then((response) => {\r\n        console.log(response)\r\n        return response.json();\r\n    }).then((res) => {\r\n        if (res.success) {\r\n            localStorage.setItem(\"token\", res.token);\r\n            localStorage.setItem(\"admin\", res.admin);\r\n            localStorage.setItem(\"username\", credentiels.username);\r\n            console.log(localStorage.getItem('username'));\r\n            dispatch(loginReceved(res));\r\n            resetForm();\r\n        }\r\n        else {\r\n            let err = new Error(\"Error\", res.message);\r\n            throw err;\r\n        }\r\n    }).catch(err => warningInfo(err.message));\r\n}\r\n\r\n\r\n// logout process\r\nconst requestLogout = () => ({\r\n    type: Actions.REQUEST_LOGOUT\r\n})\r\n\r\nconst successLogout = () => ({\r\n    type: Actions.SUCCESS_LOGOUT\r\n})\r\n\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch(requestLogout());\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"admin\");\r\n    localStorage.removeItem(\"username\");\r\n    history.push(\"/login\");\r\n\r\n    dispatch(successLogout());\r\n    // redirect to home page\r\n}\r\n\r\n\r\n\r\n// fetch users\r\nconst usersLoading = () => ({\r\n    type: Actions.LOAD_USERS\r\n})\r\n\r\nconst addUsers = (users) => ({\r\n    type: Actions.FETCH_USERS,\r\n    data: users\r\n})\r\nconst usersFailed = (err) => ({\r\n    type: Actions.USERS_FAILED,\r\n    data: err\r\n})\r\n\r\n\r\nexport const fetchUsers = () => dispatch => {\r\n    dispatch(usersLoading());\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    return fetch(baseUrl + \"users\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        }\r\n    })\r\n        .then((res) => {\r\n            if (res.status >= 200 && res.status < 300) {\r\n                return res.json();\r\n            }\r\n            else {\r\n                let err = new Error(\"Error :\" + res.status + \" : \" + res.statusText);\r\n                throw err;\r\n            }\r\n        }).then((users) => {\r\n            dispatch(addUsers(users));\r\n        }).catch(err => {\r\n            dispatch(usersFailed(err));\r\n        })\r\n}\r\n\r\n\r\n// skills\r\n\r\nconst skillsLoading = () => ({\r\n    type: Actions.LOAD_SKILLS\r\n})\r\n\r\nconst skillsFailed = (err) => ({\r\n    type: Actions.FAILED_SKILLS,\r\n    data: err\r\n})\r\n\r\n\r\nconst addSkills = projects => ({\r\n    type: Actions.ADD_SKILLS,\r\n    data: projects\r\n})\r\n\r\nexport function fetchSkills() {\r\n    return function (dispatch) {\r\n        dispatch(skillsLoading());\r\n        return fetch(baseUrl + \"skills\")\r\n            .then((result) => {\r\n                if (!result.ok) {\r\n                    console.log(result);\r\n                    let err = new Error(\"Error \" + result.statusText + \" \" + result.status);\r\n                    throw err;\r\n                }\r\n\r\n                return result.json();\r\n            })\r\n            .then(responce => {\r\n\r\n                dispatch(addSkills(responce));\r\n            })\r\n            .catch(err => {\r\n                dispatch(skillsFailed(err.message));\r\n            })\r\n    }\r\n}\r\n\r\n\r\nconst addSingleSkill = (data) => ({\r\n    type: Actions.ADD_SKILL,\r\n    data: data\r\n})\r\n\r\nconst updateSkill = (data) => ({\r\n    type: Actions.UPDATE_SKILL,\r\n    data: data\r\n})\r\n\r\n\r\nexport const addSkill = (data, resetFields, setFile) => dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"skills\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        },\r\n        body: data\r\n\r\n    })\r\n        .then((result) => {\r\n            if (!result.ok) {\r\n                console.log(result);\r\n                let err = new Error(\"Error \" + result.statusText + \" \" + result.status);\r\n                throw err;\r\n            }\r\n            // clear input field;\r\n            resetFields();\r\n            return result.json();\r\n        })\r\n        .then((res) => {\r\n            dispatch(addSingleSkill(res));\r\n            setFile([]);\r\n            successInfo(\"skill added successfuly\");\r\n        })\r\n        .catch(err => { warningInfo(err.message) });\r\n}\r\n\r\nconst removeSkills = (data) => ({\r\n    type: Actions.DELETE_SKILL,\r\n    data: data\r\n})\r\n\r\n\r\nexport const deleteSkills = (ids) => dispatch => {\r\n    console.log(\"ids \", ids);\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"skills\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + token // if you use token\r\n        },\r\n        body: JSON.stringify(ids)\r\n    }).then((res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        let err = new Error(\"Error \" + res.statusText + \" \" + res.status);\r\n        throw err;\r\n    }).then((res) => {\r\n        console.log(res);\r\n        if (res > 0) {\r\n            dispatch(removeSkills(ids));\r\n            successInfo(\"skills deleted successfully\");\r\n        }\r\n        else {\r\n            warningInfo(\"please select user from table\");\r\n        }\r\n    })\r\n        .catch((err) => warningInfo(err.message));\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postComment } from \"../redux/actionsCreators\"\r\n\r\nimport { MailFilled, LinkedinFilled, PhoneFilled } from \"@ant-design/icons\";\r\nimport { Form, Input, Button, Col, Row } from 'antd';\r\nimport { useForm } from \"antd/lib/form/Form\";\r\n\r\n\r\n\r\nconst validateMessages = {\r\n    required: '${name} is required!',\r\n    types: {\r\n        email: '${name} is not validate email!'\r\n    }\r\n}\r\n\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        md: { span: 20, offset: 2 }\r\n    },\r\n};\r\n\r\nconst Contact = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        dispatch(postComment(values));\r\n        form.resetFields();\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const [form] = useForm();\r\n    return (\r\n        <section className=\"contactContainer section\" id=\"contactUs\">\r\n            <div className=\"container\">\r\n\r\n                <h1 className=\"text-center tropBold\">GET IN <span className=\"primary\">TOUCH</span></h1>\r\n                <SocialMedia />\r\n                <h4>\r\n                    Feel free to send me a message:\r\n                </h4>\r\n                <Form\r\n                    className=\"form\"\r\n                    form={form}\r\n                    wrapperCol={{\r\n                        xs: { span: 24 },\r\n                        md: { span: 24 }\r\n                    }}\r\n                    name=\"contact\"\r\n                    initialValues={{\r\n                        name: \"\",\r\n                        email: \"\",\r\n                        message: \"\"\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    validateMessages={validateMessages}\r\n                >\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"name\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Your name\" className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                type: \"email\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Your email\" className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"message\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.TextArea placeholder=\"your message\" rows={6} className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"btn\">\r\n                            Send Message\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst SocialMedia = () => {\r\n    return (\r\n        <Row className=\"socialMediaContact\">\r\n            <Col span={8}>\r\n                <span>Mail me</span>\r\n                <MailFilled className=\"icon\" />\r\n                <span>elouadi.abdelali@gmail.com</span>\r\n            </Col>\r\n            <Col span={8}>\r\n                <span>Call me</span>\r\n                <PhoneFilled className=\"icon\" fill=\"red\" />\r\n                <span>+21206060606</span>\r\n            </Col>\r\n            <Col span={8}>\r\n                <span>Contact me</span>\r\n                <a href=\"https://linkden.com\">\r\n                    <LinkedinFilled className=\"icon\" />\r\n                </a>\r\n                <span>On Linkden</span>\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Contact = () => {\r\n//     const [state, setValue] = useState({ name: \"\", email: \"\", message: \"\" });\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n\r\n//     const handleChange = (event) => {\r\n//         const target = event.target;\r\n//         const { name, value } = target\r\n\r\n//         setValue(prev => ({\r\n//             ...prev,\r\n//             [name]: value\r\n//         }))\r\n//     }\r\n\r\n//     const handleSubmit = e => {\r\n//         e.preventDefault();\r\n//         dispatch(postComment(state.name, state.email, state.email))\r\n//         // reset initial state;\r\n//         setValue({\r\n//             name: '',\r\n//             email: '',\r\n//             message: ''\r\n//         })\r\n\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"contact\">\r\n//             <ToastContainer\r\n//                 position=\"top-right\"\r\n//                 autoClose={5000}\r\n//                 hideProgressBar={false}\r\n//                 newestOnTop={false}\r\n//                 closeOnClick\r\n//                 rtl={false}\r\n//                 pauseOnFocusLoss\r\n//                 draggable\r\n//                 pauseOnHover\r\n//             />\r\n//             {/* Same as */}\r\n//             <ToastContainer />\r\n//             <div className=\"contactInfo\">\r\n//                 <h3 className=\"title\">Contact Us</h3>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"name\">Name</label>\r\n//                         <input name=\"name\" type=\"text\" placeholder=\"your name\"\r\n//                             id=\"name\" className=\"form-control\"\r\n//                             value={state.name}\r\n//                             onChange={handleChange} />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"email\">Email</label>\r\n//                         <input name=\"email\" type=\"text\" placeholder=\"your email\"\r\n//                             id=\"email\" className=\"form-control\"\r\n//                             value={state.email}\r\n//                             onChange={handleChange} />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"message\">Message</label>\r\n//                         <textarea name=\"message\" id=\"message\"\r\n//                             className=\"form-control\" rows='6'\r\n//                             value={state.message}\r\n//                             onChange={handleChange}>\r\n//                         </textarea>\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <button className=\"btn\">\r\n//                             send Message\r\n//                         </button>\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport { GithubFilled, LinkedinFilled, } from \"@ant-design/icons\";\r\n\r\nconst style = {\r\n    fontSize: \"24px\",\r\n    marginTop: \"10px\"\r\n}\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Made By Elouadi Abdelali</p>\r\n            <div className=\"footer-social-media\">\r\n                <a href=\"https://github.com\"><GithubFilled className=\"icon\" style={style} /></a>\r\n                <a href=\"https://linkden.com\"><LinkedinFilled className=\"icon\" style={style} /></a>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\n\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"text-center\">is loading ...</div>\r\n    );\r\n}\r\n\r\n\r\nexport default Loading;","import { Col, Row, Card } from \"antd\";\r\nimport React from \"react\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst RenderProjects = ({ projects }) => {\r\n\r\n    const prs = projects.map(pr => {\r\n        return (\r\n            <Col md={12} className=\"project\" key={pr.id}>\r\n                <a href={pr.siteUrl} alt={pr.title}>\r\n                    <Card\r\n                        className=\"projectCard\"\r\n                        style={{ width: \"100%\", height: 250 }}\r\n                        cover={<img alt=\"example\" src={baseUrl + pr.image} style={{ width: \"100%\", height: 247 }} />}\r\n                    >\r\n                    </Card>\r\n                    <div className=\"projectHover\">\r\n                        {pr.title}\r\n                    </div>\r\n                </a>\r\n            </Col>\r\n        );\r\n    })\r\n    return prs;\r\n}\r\n\r\n\r\n\r\nconst Projects = (props) => {\r\n    const { projects, errMess, isLoading } = props;\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n\r\n        return (\r\n            <div className=\"text-danger text-center\">\r\n                {errMess}\r\n            </div>\r\n        );\r\n    }\r\n    else if (projects.length > 0) {\r\n        return (\r\n            <section className=\"portfolioContainer section\" id=\"portfolio\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"text-center tropBold\">MY <span className=\"primary\">PORTFOLIO</span></h1>\r\n                    <div className=\"portfolio\">\r\n                        <Row gutter={[32, 32]}>\r\n                            <RenderProjects projects={projects} />\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../redux/actionsCreators\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { HomeOutlined, ShopOutlined, LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\npage structure \r\nconst {Header, Content, Footer} = layout;\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\nconst iconSize = {\r\n    fontSize: \"20px\"\r\n}\r\nconst Navbar = (props) => {\r\n\r\n    // to set the current active nav\r\n    const [activeNav, setActiveNav] = useState(\"home\");\r\n    const handleClick = e => {\r\n        setActiveNav(e.key);\r\n    };\r\n\r\n\r\n    const state = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n    }\r\n    return (\r\n        <Header className=\"header\">\r\n            <div className=\"logo\"><Link to=\"/\"><span>A</span>E</Link></div>\r\n            {/* render this is the login users are not admin */}\r\n            {!state.authentication.isAdmin ?\r\n                <Menu mode=\"horizontal\" onClick={handleClick} selectedKeys={[activeNav]} className=\"nav-list\" theme=\"dark\">\r\n                    <Menu.Item key=\"home\" className=\"link-item\">\r\n                        <Link to=\"/\" >\r\n                            <HomeOutlined style={iconSize} />\r\n                            <span className=\"links\"> Home</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key=\"home\" className=\"link-item\">\r\n                        <Link to=\"/\" >\r\n                            <HomeOutlined style={iconSize} />\r\n                            <span className=\"links\"> Home</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"about\" className=\"link-item\">\r\n                        <Link to={`/#aboutUs`}>\r\n                            <UserOutlined style={iconSize} />\r\n                            <span className=\"links\">AboutUs</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"contact\" className=\"link-item\">\r\n                        <a href=\"#contactUs\">\r\n                            <ContactsOutlined style={iconSize} />\r\n                            <span className=\"links\">ContactUs</span>\r\n                        </a>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='portfolio' className=\"link-item\">\r\n                        <a href=\"#portfolio\">\r\n                            <ShopOutlined style={iconSize} />\r\n                            <span className=\"links\">Portfolio</span>\r\n                        </a>\r\n                    </Menu.Item> */}\r\n                    <Menu.Item key='blog' className=\"link-item\">\r\n                        <Link to=\"/blog\">\r\n                            <ShopOutlined style={iconSize} />\r\n                            <span className=\"links\">Blog</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    {!state.authentication.isAuthenticated\r\n                        ?\r\n                        <Menu.Item key='login' className=\"link-item\">\r\n                            <Link to=\"/login\">\r\n                                <LoginOutlined style={iconSize} />\r\n                                <span className=\"links\">Login</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        :\r\n                        <Menu.Item key='logout' className=\"link-item\" onClick={handleLogout}>\r\n\r\n                            <LogoutOutlined style={iconSize} />\r\n                            <span className=\"links\">logout</span>\r\n\r\n                        </Menu.Item>}\r\n                </Menu>\r\n                :\r\n                // render this if user is admin\r\n                <AdminNav handleClick={handleClick} activeNav={activeNav} handleLogout={handleLogout} state={state} />\r\n            }\r\n        </Header>\r\n    );\r\n}\r\n\r\n\r\nconst AdminNav = ({ handleClick, activeNav, handleLogout, state }) => {\r\n\r\n    if (state.authentication.isAdmin) {\r\n        return (\r\n            <Menu mode=\"horizontal\" onClick={handleClick} selectedKeys={[activeNav]} className=\"nav-list\" theme=\"dark\">\r\n                <Menu.Item key=\"home\" className=\"link-item\">\r\n                    <Link to=\"/\" >\r\n                        <HomeOutlined style={iconSize} />\r\n                        <span className=\"links\"> Home</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='portfolio' className=\"link-item\">\r\n                    <Link to=\"/dashboard\">\r\n                        <ShopOutlined style={iconSize} />\r\n                        <span className=\"links\">Dashboard</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='logout' className=\"link-item\" onClick={handleLogout}>\r\n                    <LogoutOutlined style={iconSize} />\r\n                    <span className=\"links\">logout</span>\r\n                </Menu.Item>\r\n            </Menu>\r\n\r\n        );\r\n    }\r\n    else return null\r\n}\r\n\r\nexport default Navbar;","export const ADD_PROJECTS = \"ADD_PROJECTS\";\r\nexport const FETCH_PROJECTS = \"FETCH_PROJECTS\";\r\nexport const LOAD_PROJECTS = \"LOAD_PROJECTS\";\r\nexport const FAILED_PROJECTS = \"FAILED_PROJECTS\";\r\nexport const ADD_PRJ = \"ADD_PRJ\";\r\nexport const UPDATE_PRJ = \"UPDATE_PRJ\";\r\nexport const DELETE_PR = \"DELETE_PR\";\r\n\r\n// for comments\r\nexport const FETCH_COMMENTS = \"FETCH_COMMENTS\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const REMOVE_MESSAGES = \"REMOVE_MESSAGES\";\r\n\r\n\r\n// caterories\r\nexport const ADD_CATEGORIES = \"ADD_CATEGORIES\";\r\nexport const FAILED_CATEGORIES = \"FAILED_CATEGORIES\";\r\n\r\n\r\n// login\r\nexport const REQUEST_LOGIN = \"REQUEST_LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\n\r\n// log out\r\nexport const REQUEST_LOGOUT = \"REQUEST_LOGOUT\";\r\nexport const SUCCESS_LOGOUT = \"SUCCESS_LOGOUT\";\r\n\r\n\r\n// fetch users\r\nexport const FETCH_USERS = \"FETCH_USERS\";\r\nexport const LOAD_USERS = \"LOAD_USERS\";\r\nexport const USERS_FAILED = \"USERS_FAILED\";\r\nexport const REMOVE_USER = \"REMOVE_USER\";\r\n\r\n\r\n\r\n\r\n\r\n// skills\r\nexport const ADD_SKILLS = \"ADD_SKILLS\";\r\nexport const LOAD_SKILLS = \"LOAD_SKILLS\";\r\nexport const FAILED_SKILLS = \"FAILED_SKILLS\";\r\nexport const ADD_SKILL = \"ADD_SKILL\";\r\nexport const UPDATE_SKILL = \"UPDATE_SKILL\";\r\nexport const DELETE_SKILL = \"DELETE_SKILL\";\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Modal, Select, Breadcrumb } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { addPrj } from \"../../redux/actionsCreators\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst validateMessages = {\r\n    required: '${name} is required!',\r\n}\r\n\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        md: { span: 16 }\r\n    }\r\n};\r\n\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\n\r\n\r\nconst AddProject = (props) => {\r\n\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState(\"\");\r\n    const [fileList, setFile] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewVisible(true);\r\n    };\r\n\r\n    const handleChange = ({ fileList }) => {\r\n        setFile(fileList)\r\n        console.log(fileList[0].originFileObj);\r\n    };\r\n\r\n\r\n\r\n\r\n    // const dispatch = useDispatch();\r\n    const onFinish = (values) => {\r\n        console.log(values);\r\n        const formData = new FormData();\r\n        formData.append(\"title\", values.title);\r\n        formData.append(\"description\", values.description);\r\n        formData.append(\"siteUrl\", values.siteUrl);\r\n        formData.append(\"technologies\", values.technologies);\r\n        if (fileList.length > 0) {\r\n            formData.append(\"image\", fileList[0].originFileObj);\r\n        }\r\n        dispatch(addPrj(formData, form.resetFields, setFile));\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const [form] = useForm();\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"addProject\">\r\n            <Breadcrumb className=\"breadcrumb\">\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard\">dashboard</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard/projects\">projects</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    add\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"container main\">\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    className=\"form\"\r\n                    form={form}\r\n                    wrapperCol={{\r\n                        xs: { span: 24 },\r\n                        md: { span: 24 }\r\n                    }}\r\n                    name=\"addPr\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    validateMessages={validateMessages}\r\n                >\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        label=\"title\"\r\n                        name=\"title\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"project title\" className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        label=\"project description\"\r\n                        name=\"description\"\r\n                    // rules={[\r\n                    //     {\r\n                    //         required: true\r\n                    //     },\r\n                    // ]}\r\n                    >\r\n                        <Input.TextArea placeholder=\"project description\" rows={6} className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"siteUrl\"\r\n                        label=\"project or github link\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"site Url or github link\" className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"technologies\"\r\n                        label=\"technologies used seperate by ','\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"technologie used separated by ','\" className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"CategoryId\"\r\n                        label=\"category\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select>\r\n                            {props.categories.map((cat) => (\r\n                                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    {/* image  */}\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"image\"\r\n                    >\r\n                        <Upload\r\n                            listType=\"picture-card\"\r\n                            fileList={fileList}\r\n                            onPreview={handlePreview}\r\n                            onChange={handleChange}\r\n                            beforeUpload={() => false} // return false so that antd doesn't upload the picture right away\r\n                        >\r\n                            {fileList.length >= 1 ? null : <div> <PlusOutlined /><div style={{ marginTop: 8 }}>image</div></div>}\r\n                        </Upload>\r\n\r\n\r\n                        <Modal\r\n                            visible={previewVisible}\r\n                            footer={null}\r\n                            onCancel={handleCancel}\r\n                        >\r\n                            <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n                        </Modal>\r\n                    </Form.Item>\r\n\r\n                    {/* ************ */}\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                    >\r\n                        <Button htmlType=\"submit\" type=\"primary\">\r\n                            add\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default AddProject;","import React from \"react\";\r\nimport { List } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DeleteOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\n\r\n\r\n\r\nconst deleteItem = {\r\n    color: \"red\",\r\n    fontSize: \"rgb(255, 59, 59)\"\r\n}\r\nconst Dashboard = () => {\r\n\r\n    return (\r\n\r\n        <main className=\"main\">\r\n            <div className=\"container\">\r\n                <h3>Site Administration</h3>\r\n                <List\r\n                    header={<div className=\"tHead\">availabe table</div>}\r\n                    bordered\r\n                    className=\"items\"\r\n                >\r\n                    <List.Item >\r\n                        <Link to=\"/dashboard/users\">Users</Link>\r\n                        <Link to='/dashboard/users'><DeleteOutlined style={deleteItem} />delete</Link>\r\n                        <Link to=\"/dashboard/users/add\"><PlusOutlined />add</Link>\r\n                    </List.Item>\r\n\r\n                    <List.Item >\r\n                        <Link to=\"/dashboard/projects\">Projects</Link>\r\n                        <Link to='/dashboard/projects'><DeleteOutlined style={deleteItem} />delete</Link>\r\n                        <Link to=\"/dashboard/projects/add\"><PlusOutlined />add</Link>\r\n                    </List.Item>\r\n\r\n                    <List.Item>\r\n                        <Link to=\"/dashboard/messages\">Messages</Link>\r\n                        <Link to='/dashboard/messages'><DeleteOutlined style={deleteItem} />delete</Link>\r\n                        <Link to=\"/dashboard/messages\"><PlusOutlined />add</Link>\r\n                    </List.Item>\r\n\r\n                    <List.Item>\r\n                        <Link to=\"/dashboard/skills\">Skills</Link>\r\n                        <Link to='/dashboard/skills'><DeleteOutlined style={deleteItem} />delete</Link>\r\n                        <Link to=\"/dashboard/skills/add\"><PlusOutlined />add</Link>\r\n                    </List.Item>\r\n                </List>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\"\r\nimport { addUser, loginUser } from \"../redux/actionsCreators\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Form, Input, Button, Alert } from 'antd';\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const onFinish = (values) => {\r\n        console.log(values);\r\n        dispatch(loginUser(values, form.resetFields));\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    const [form] = useForm();\r\n\r\n    return (\r\n        <section className=\"auth\">\r\n            <div className=\"container\">\r\n                <Form\r\n                    form={form}\r\n                    name=\"basic\"\r\n                    className=\"authForm\"\r\n                    initialValues={{\r\n                        username: \"\",\r\n                        password: \"\"\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        className=\"authFormItem\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input size=\"large\" placeholder=\"username\" prefix={<UserOutlined />} className=\"authInput\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        className=\"authFormItem\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password size=\"large\" placeholder=\"Password\" className=\"authInput\" prefix={<LockOutlined />} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item >\r\n                        <Button htmlType=\"submit\" type=\"primary\" className=\"login-form-button\">\r\n                            login\r\n                        </Button >\r\n                    </Form.Item>\r\n                </Form>\r\n                <p className=\"text-center\">Don't have an account <Link to=\"/register\">Register</Link></p>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nconst validateMessages = {\r\n    required: '${name} is required!',\r\n    types: {\r\n        email: 'is not validate email!'\r\n    }\r\n}\r\n\r\n\r\nconst Register = () => {\r\n    const [isRegister, setIsRegister] = useState(false);\r\n\r\n    const onFinish = (values) => {\r\n        addUser(values, form.resetFields, setIsRegister);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    const [form] = useForm();\r\n    return (\r\n        <section className=\"auth\">\r\n            <div className=\"container\">\r\n                {/* alert to tell users is register successfully */}\r\n                {isRegister ? <Alert message=\"Success register try log in \" type=\"success\" showIcon /> : null}\r\n                <Form\r\n                    form={form}\r\n                    name=\"basic\"\r\n                    className=\"authForm\"\r\n                    initialValues={{\r\n                        username: \"\",\r\n                        password: \"\",\r\n                        firstname: \"\",\r\n                        lastname: \"\",\r\n                        email: \"\"\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    validateMessages={validateMessages}\r\n                >\r\n\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        className=\"authFormItem\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input size=\"large\" placeholder=\"username\" className=\"authInput\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"firstname\"\r\n                        className=\"authFormItem\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input size=\"large\" placeholder=\"firstname\" className=\"authInput\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"lastname\"\r\n                        className=\"authFormItem\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input size=\"large\" placeholder=\"lastname\" className=\"authInput\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        className=\"authFormItem\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                type: \"email\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input size=\"large\" placeholder=\"email\" className=\"authInput\" />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        className=\"authFormItem\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password size=\"large\" placeholder=\"Password\" className=\"authInput\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item >\r\n                        <Button htmlType=\"submit\" type=\"primary\" className=\"login-form-button\">\r\n                            Register\r\n                        </Button >\r\n                    </Form.Item>\r\n                </Form>\r\n                <p className=\"text-center\">have an account <Link to=\"/login\">login</Link></p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport { Register, Login };\r\n\r\n// const Login = (props) => {\r\n\r\n\r\n//     const initialValues = {\r\n//         username: '',\r\n//         password: ''\r\n//     }\r\n//     const onSubmit = (values, actions) => {\r\n//         // alert(JSON.stringify(values));\r\n//         dispatch(loginUser(values, actions));\r\n//     }\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n\r\n//     const validate = values => {\r\n//         const errors = {};\r\n//         if (!values.username) {\r\n//             errors.username = \"required\";\r\n//         }\r\n//         if (!values.password) {\r\n//             errors.password = \"please fill password\";\r\n//         }\r\n//         return errors;\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div className=\"authentication\">\r\n//             <div className=\"authContainer\">\r\n//                 <h3>Login</h3>\r\n//                 <Formik\r\n//                     initialValues={initialValues}\r\n//                     onSubmit={onSubmit}\r\n//                     validate={validate}>\r\n//                     {props => (\r\n//                         <>\r\n//                             <Form >\r\n//                                 <label htmlFor='username'>Username</label>\r\n//                                 <Field type=\"text\" id=\"username\"\r\n//                                     name=\"username\" placeholder=\"username\" />\r\n//                                 <ErrorMessage name=\"username\" />\r\n//                                 <label htmlFor='password'>Password</label>\r\n//                                 <Field type=\"password\" id=\"password\"\r\n//                                     name=\"password\"\r\n//                                     placeholder=\"password\" />\r\n//                                 <ErrorMessage name=\"password\" />\r\n//                                 <button type=\"submit\">log in</button>\r\n//                             </Form>\r\n//                             <React.Fragment>\r\n//                                 {props.isSubmitting ? ( // isSubmitting IS A FORMIK PROPS\r\n//                                     <progress\r\n//                                         size={20}\r\n//                                     />\r\n//                                 ) : null}\r\n//                             </React.Fragment>\r\n//                         </>\r\n//                     )}\r\n//                 </Formik>\r\n//                 <p className=\"question\">don't have an accout <button className=\"switch\">Register</button></p>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n// const Register = (props) => {\r\n//     const [isRegister, setIsRegister] = useState(false);\r\n//     const validate = values => {\r\n//         const errors = {};\r\n//         if (!values.firstname) {\r\n//             errors.firstname = 'Required';\r\n//         } else if (values.firstname.length > 20) {\r\n//             errors.firstname = 'Must be 20 characters or less';\r\n//         } else if (values.firstname.length < 3) {\r\n//             errors.firstname = 'Must greater than 3';\r\n//         }\r\n\r\n//         if (!values.lastname) {\r\n//             errors.lastname = 'Required';\r\n//         } else if (values.lastname.length > 20) {\r\n//             errors.lastname = 'Must be 20 characters or less';\r\n//         } else if (values.lastname.length < 3) {\r\n//             errors.lastname = 'Must be greater than 3';\r\n//         }\r\n\r\n//         if (!values.username) {\r\n//             errors.username = 'Required';\r\n//         } else if (values.username.length > 20) {\r\n//             errors.email = 'Must be 20 characters or less';\r\n//         }\r\n//         if (!values.password) {\r\n//             errors.password = 'Required';\r\n//         } else if (values.password.length < 6) {\r\n//             errors.password = 'Must greater than 6 character';\r\n//         }\r\n\r\n//         return errors;\r\n//     };\r\n\r\n//     const initialValues = {\r\n//         username: '',\r\n//         lastname: '',\r\n//         firstname: '',\r\n//         password: ''\r\n//     }\r\n//     const onSubmit = (values, actions) => {\r\n//         addUser(values, actions, setIsRegister);\r\n//     }\r\n\r\n\r\n//     const tryLogin = _ => {\r\n//         if (isRegister) {\r\n//             return (\r\n//                 <div>\r\n//                     your are register now try log in <Link to=\"login\">Login</Link>\r\n//                 </div>\r\n//             );\r\n//         }\r\n//         return null;\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div className=\"authentication\">\r\n//             <div className=\"authContainer\">\r\n//                 {tryLogin()}\r\n//                 <ToastContainer\r\n//                     position=\"top-right\"\r\n//                     autoClose={5000}\r\n//                     hideProgressBar={false}\r\n//                     newestOnTop={false}\r\n//                     closeOnClick\r\n//                     rtl={false}\r\n//                     pauseOnFocusLoss\r\n//                     draggable\r\n//                     pauseOnHover\r\n//                 />\r\n//                 {/* Same as */}\r\n//                 <ToastContainer />\r\n\r\n//                 <h3>Register</h3>\r\n//                 <Formik initialValues={initialValues} onSubmit={onSubmit} validate={validate}>\r\n//                     {props => (\r\n//                         <>\r\n//                             <Form >\r\n//                                 <label htmlFor='username'>Username</label>\r\n//                                 <Field type=\"text\" id=\"username\"\r\n//                                     name=\"username\" placeholder=\"username\" />\r\n//                                 <ErrorMessage name=\"username\" />\r\n//                                 <label htmlFor='firstname'>Firstname</label>\r\n//                                 <Field type=\"text\" id=\"firstname\"\r\n//                                     name=\"firstname\" placeholder=\"firstname\" />\r\n//                                 <ErrorMessage name=\"firstname\" />\r\n//                                 <label htmlFor='lastname'>lastname</label>\r\n//                                 <Field type=\"text\" id=\"lastname\"\r\n//                                     name=\"lastname\" placeholder=\"lastname\" />\r\n//                                 <ErrorMessage name=\"lastname\" />\r\n//                                 <label htmlFor='password'>Password</label>\r\n//                                 <Field type=\"password\" id=\"password\"\r\n//                                     name=\"password\"\r\n//                                     placeholder=\"password\" />\r\n//                                 <ErrorMessage name=\"password\" />\r\n//                                 <button type=\"submit\">log in</button>\r\n//                             </Form>\r\n//                             <React.Fragment>\r\n//                                 {props.isSubmitting ? ( // isSubmitting IS A FORMIK PROPS\r\n//                                     <progress\r\n//                                         size={20}\r\n//                                     />\r\n//                                 ) : null}\r\n//                             </React.Fragment>\r\n//                         </>\r\n//                     )}\r\n//                 </Formik>\r\n\r\n//                 <p className=\"question\">already have an accout<button className=\"switch\">login</button></p>\r\n//             </div>\r\n//         </div >\r\n//     );\r\n// }\r\n// const layout = {\r\n//     wrapperCol: {\r\n//         span: 9,\r\n//         offset: 7\r\n//     }\r\n// };\r\n// const tailLayout = {\r\n//     wrapperCol: {\r\n//         span: 24,\r\n//         offset: 10\r\n//     },\r\n// };\r\n","import React, { useState } from 'react';\r\nimport { Button, Table, Divider, Popconfirm, Breadcrumb } from 'antd';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteUsers } from \"../../redux/actionsCreators\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'username',\r\n        dataIndex: 'username',\r\n        // render: (text, record) => <Link to={'/dashboard/users/' + record.id}>{text}</Link>,\r\n    },\r\n    {\r\n        title: 'firstname',\r\n        dataIndex: 'firstname',\r\n    },\r\n    {\r\n        title: 'lastname',\r\n        dataIndex: 'lastname',\r\n    },\r\n    {\r\n\r\n        title: 'description',\r\n        dataIndex: 'description'\r\n    }\r\n];\r\n\r\n\r\nconst Users = () => {\r\n\r\n    const [selectedRow, setSelectedRow] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n            setSelectedRow(selectedRowKeys);\r\n        }\r\n    }\r\n\r\n\r\n    const confirm = () => {\r\n        dispatch(deleteUsers(selectedRow));\r\n    }\r\n\r\n    const cancel = () => {\r\n        setSelectedRow();\r\n    }\r\n\r\n\r\n    const state = useSelector(state => state);\r\n    return (\r\n        <main className=\"main\">\r\n            <Breadcrumb className=\"breadcrumb\">\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard\">dashboard</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    Users\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"container\">\r\n                <h3>Users:</h3>\r\n                <Divider />\r\n                <div className=\"addNew\">\r\n                    <Popconfirm\r\n                        title=\"Are you sure delete \"\r\n                        onConfirm={confirm}\r\n                        onCancel={cancel}\r\n                        okText=\"delete\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button className=\"delete\">Delete</Button>\r\n                    </Popconfirm>                </div>\r\n                <Table\r\n                    rowSelection={{\r\n                        type: \"checkbox\",\r\n                        ...rowSelection\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={state.users.users}\r\n                    rowKey={record => record.id}\r\n                />\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Users;","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Modal, Divider, Select, Breadcrumb } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { updatePr } from \"../../redux/actionsCreators\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../shared/baseUrl\";\r\n\r\n\r\nconst validateMessages = {\r\n    required: '${name} is required!',\r\n}\r\n\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        md: { span: 16 }\r\n    }\r\n};\r\n\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\n\r\n\r\nconst UpdateProject = (props) => {\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState(\"\");\r\n    const [fileList, setFile] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewVisible(true);\r\n    };\r\n\r\n    const handleChange = ({ fileList }) => {\r\n        setFile(fileList)\r\n    };\r\n\r\n\r\n\r\n\r\n    // const dispatch = useDispatch();\r\n    const onFinish = (values) => {\r\n        console.log(\"values \", values);\r\n        const formData = new FormData();\r\n        formData.append(\"title\", values.title);\r\n        formData.append(\"description\", values.description);\r\n        formData.append(\"siteUrl\", values.siteUrl);\r\n        formData.append(\"technologies\", values.technologies);\r\n        if (fileList.length > 0) {\r\n            formData.append(\"image\", fileList[0].originFileObj);\r\n        }\r\n        formData.append(\"CategoryId\", values.CategoryId);\r\n        dispatch(updatePr(formData, props.project.id));\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const [form] = useForm();\r\n\r\n\r\n    return (\r\n        <section className=\"addProject\">\r\n            <Breadcrumb className=\"breadcrumb\">\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard\">dashboard</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard/projects\">projects</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    update\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"container main\">\r\n                <h3>Update Project:</h3>\r\n                <Divider />\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    className=\"form\"\r\n                    form={form}\r\n                    initialValues={props.project}\r\n                    wrapperCol={{\r\n                        xs: { span: 24 },\r\n                        md: { span: 24 }\r\n                    }}\r\n                    name=\"addPr\"\r\n\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    validateMessages={validateMessages}\r\n                >\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        label=\"title\"\r\n                        name=\"title\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"project title\" className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        label=\"project description\"\r\n                        name=\"description\"\r\n                    // rules={[\r\n                    //     {\r\n                    //         required: true\r\n                    //     },\r\n                    // ]}\r\n                    >\r\n                        <Input.TextArea placeholder=\"project description\" rows={6} className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"siteUrl\"\r\n                        label=\"project or github link\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"site Url or github link\" className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"technologies\"\r\n                        label=\"technologies used seperate by ','\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"technologie used separated by ','\" className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"CategoryId\"\r\n                        label=\"category\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select>\r\n                            {props.categories.map((cat) => (\r\n                                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    {/* image  */}\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                    >\r\n                        <Upload\r\n                            listType=\"picture-card\"\r\n                            fileList={fileList}\r\n                            onPreview={handlePreview}\r\n                            onChange={handleChange}\r\n                            beforeUpload={() => false} // return false so that antd doesn't upload the picture right away\r\n                        >\r\n                            {fileList.length >= 1 ? null : <div> <PlusOutlined /><div style={{ marginTop: 8 }}>image</div></div>}\r\n                        </Upload>\r\n\r\n\r\n                        <Modal\r\n                            visible={previewVisible}\r\n                            footer={null}\r\n                            onCancel={handleCancel}\r\n                        >\r\n                            <img alt=\"project\" style={{ width: \"100%\" }} src={previewImage} />\r\n                        </Modal>\r\n                    </Form.Item>\r\n\r\n                    {/* ************ */}\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                    >\r\n                        <Button htmlType=\"submit\" type=\"primary\">\r\n                            add\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default UpdateProject;","import React, { useState } from 'react';\r\nimport { Button, Table, Divider, Popconfirm, Space, Tag, Breadcrumb } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteComments } from \"../../redux/actionsCreators\";\r\n\r\n\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'name',\r\n        dataIndex: 'name',\r\n        // render: (text, record) => <Link to={'/dashboard/users/' + record.id}>{text}</Link>,\r\n    },\r\n    {\r\n        title: 'email',\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: 'message',\r\n        dataIndex: 'message',\r\n        render: (text, record) => (\r\n            <Space size=\"middle\">\r\n                {text}\r\n                {(((Date.now() - Date.parse(record.createdAt)) / 1000) / 3600) < 24 ? <Tag color=\"red\">new</Tag> : null}\r\n            </Space>\r\n        )\r\n    }\r\n];\r\n\r\n\r\nconst Comments = () => {\r\n\r\n    const [selectedRow, setSelectedRow] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n            setSelectedRow(selectedRowKeys);\r\n        }\r\n    }\r\n\r\n\r\n    const confirm = () => {\r\n        dispatch(deleteComments(selectedRow));\r\n    }\r\n\r\n    const cancel = () => {\r\n        setSelectedRow();\r\n    }\r\n\r\n\r\n    const state = useSelector(state => state);\r\n    return (\r\n        <main className=\"main\">\r\n            <Breadcrumb className=\"breadcrumb\">\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard\">dashboard</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    Messages\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"container\">\r\n                <h3>messages:</h3>\r\n                <Divider />\r\n                <div>\r\n                    <Popconfirm\r\n                        title=\"Are you sure delete \"\r\n                        onConfirm={confirm}\r\n                        onCancel={cancel}\r\n                        okText=\"delete\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button className=\"delete\">Delete</Button>\r\n                    </Popconfirm>                </div>\r\n                <Table\r\n                    rowSelection={{\r\n                        type: \"checkbox\",\r\n                        ...rowSelection\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={state.comments.comments}\r\n                    rowKey={record => record.id}\r\n                />\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Comments;","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Upload, Modal, Select, Breadcrumb, Divider } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addSkill } from \"../../redux/actionsCreators\";\r\n\r\nconst validateMessages = {\r\n    required: '${name} is required!',\r\n}\r\n\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        md: { span: 16 }\r\n    }\r\n};\r\n\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\n\r\n\r\nconst AddSkill = (props) => {\r\n\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState(\"\");\r\n    const [fileList, setFile] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewVisible(true);\r\n    };\r\n\r\n    const handleChange = ({ fileList }) => {\r\n        setFile(fileList)\r\n        console.log(fileList[0].originFileObj);\r\n    };\r\n\r\n\r\n\r\n\r\n    // const dispatch = useDispatch();\r\n    const onFinish = (values) => {\r\n        console.log(values);\r\n        const formData = new FormData();\r\n        formData.append(\"name\", values.name);\r\n        if (fileList.length > 0) {\r\n            formData.append(\"image\", fileList[0].originFileObj);\r\n        }\r\n        dispatch(addSkill(formData, form.resetFields, setFile));\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const [form] = useForm();\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"main\">\r\n            <Breadcrumb className=\"breadcrumb\">\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard\">dashboard</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard/skills\">skills</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    add\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"container\">\r\n                <h3>add skills</h3>\r\n                <Divider />\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    className=\"form\"\r\n                    form={form}\r\n                    wrapperCol={{\r\n                        xs: { span: 24 },\r\n                        md: { span: 24 }\r\n                    }}\r\n                    name=\"addSkill\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    validateMessages={validateMessages}\r\n                >\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        label=\"name\"\r\n                        name=\"name\"\r\n                        rules={[\r\n                            {\r\n                                required: true\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"skill name\" className=\"form-control\" />\r\n                    </Form.Item>\r\n\r\n                    {/* image  */}\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                        name=\"image\"\r\n                    >\r\n                        <Upload\r\n                            listType=\"picture-card\"\r\n                            fileList={fileList}\r\n                            onPreview={handlePreview}\r\n                            onChange={handleChange}\r\n                            beforeUpload={() => false} // return false so that antd doesn't upload the picture right away\r\n                        >\r\n                            {fileList.length >= 1 ? null : <div> <PlusOutlined /><div style={{ marginTop: 8 }}>image</div></div>}\r\n                        </Upload>\r\n\r\n\r\n                        <Modal\r\n                            visible={previewVisible}\r\n                            footer={null}\r\n                            onCancel={handleCancel}\r\n                        >\r\n                            <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n                        </Modal>\r\n                    </Form.Item>\r\n\r\n                    {/* ************ */}\r\n                    <Form.Item\r\n                        {...tailLayout}\r\n                    >\r\n                        <Button htmlType=\"submit\" type=\"primary\">\r\n                            add\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default AddSkill;","import React from \"react\";\r\nimport { List, Popconfirm, Divider, Button, Breadcrumb } from \"antd\";\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from \"../../shared/baseUrl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteProjects } from \"../../redux/actionsCreators\";\r\n\r\nconst ProjectsLit = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const confirm = (id) => {\r\n        dispatch(deleteProjects(id));\r\n    }\r\n    return (\r\n        <main className=\"main\">\r\n            <Breadcrumb className=\"breadcrumb\">\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard\">dashboard</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    projects\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"container\">\r\n                <div className=\"pageTitle\">\r\n                    <h3>projects List : </h3>\r\n                    <Button type=\"primary\">\r\n                        <Link to='/dashboard/projects/add'>\r\n                            add New\r\n                    </Link>\r\n                    </Button>\r\n                </div>\r\n                <Divider />\r\n                <List\r\n                    className=\"demo-loadmore-list\"\r\n                    loading={props.projects.isLoading}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={props.projects.projects}\r\n                    renderItem={item => (\r\n                        <List.Item\r\n                            actions={[\r\n                                <Link to={`/dashboard/projects/update/${item.id}`} key={`edit${item.id}`}>\r\n                                    <Button type=\"primary\">edit</Button>\r\n                                </Link>,\r\n                                <div key={`delete${item.id}`}>\r\n                                    <Popconfirm\r\n                                        placement=\"topRight\"\r\n                                        title={`are you sure to want to delete \"${item.title}\"`}\r\n                                        onConfirm={() => confirm(item.id)}\r\n                                        okText=\"Yes\"\r\n                                        cancelText=\"No\"\r\n                                    >\r\n                                        <Button className=\"delete\" style={{ marginRight: \"15px\" }}>delete</Button>\r\n                                    </Popconfirm>\r\n                                </div>\r\n                            ]}\r\n                            extra={\r\n                                <img\r\n                                    width={272}\r\n                                    height={150}\r\n                                    alt={item.title}\r\n                                    src={baseUrl + item.image}\r\n                                />\r\n                            }\r\n                        >\r\n                            <List.Item.Meta\r\n                                title={<Link to={`/dashboard/projects/update/${item.id}`}>{item.title}</Link>}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\nexport default ProjectsLit;","import React, { useState } from 'react';\r\nimport { Button, Table, Divider, Popconfirm, Space, Tag, Breadcrumb } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteSkills } from \"../../redux/actionsCreators\";\r\nimport { baseUrl } from \"../../shared/baseUrl\";\r\n\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: 'name',\r\n        dataIndex: 'name',\r\n        // render: (text, record) => <Link to={'/dashboard/users/' + record.id}>{text}</Link>,\r\n    },\r\n    {\r\n        title: \"image\",\r\n        dataIndex: \"image\",\r\n        render: (text, record) => (\r\n            <img\r\n                width={128}\r\n                height={150}\r\n                alt=\"logo\"\r\n                src={baseUrl + record.image}\r\n            />\r\n        )\r\n    }\r\n];\r\n\r\n\r\nconst SkillsList = () => {\r\n\r\n    const [selectedRow, setSelectedRow] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n            setSelectedRow(selectedRowKeys);\r\n        }\r\n    }\r\n\r\n\r\n    const confirm = () => {\r\n        dispatch(deleteSkills(selectedRow));\r\n    }\r\n\r\n    const cancel = () => {\r\n        setSelectedRow();\r\n    }\r\n\r\n\r\n    const state = useSelector(state => state);\r\n    return (\r\n        <main className=\"main\">\r\n            <Breadcrumb className=\"breadcrumb\">\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/dashboard\">dashboard</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    Skills\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"container\">\r\n                <div className=\"pageTitle\">\r\n                    <h3>skills List : </h3>\r\n                    <Button type=\"primary\">\r\n                        <Link to='/dashboard/skills/add'>\r\n                            add New\r\n                    </Link>\r\n                    </Button>\r\n                </div>\r\n                <Divider />\r\n                <div>\r\n                    <Popconfirm\r\n                        title=\"Are you sure delete \"\r\n                        onConfirm={confirm}\r\n                        onCancel={cancel}\r\n                        okText=\"delete\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button className=\"delete\">Delete</Button>\r\n\r\n                    </Popconfirm>\r\n                </div>\r\n                <Table\r\n                    rowSelection={{\r\n                        type: \"checkbox\",\r\n                        ...rowSelection\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={state.skills.skills}\r\n                    rowKey={record => record.id}\r\n                />\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport default SkillsList;","import React, { Component, useEffect } from \"react\";\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport Footer from \"./Footer\";\r\nimport Projects from \"./Projects\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProjects, fetchCategories, fetchUsers, fetchComments, fetchSkills } from \"../redux/actionsCreators\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport AddProject from \"./admin/addProject\";\r\nimport Dashboard from './admin/dashboard';\r\nimport { Register, Login } from \"./Authentication\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport Users from \"./admin/users\";\r\nimport UpdateProject from \"./admin/updateProject\";\r\nimport Comments from \"./admin/messages\";\r\nimport addSkill from \"./admin/addSkills\";\r\nimport ProjectsLit from \"./admin/projects\";\r\nimport SkillList from \"./admin/skills\";\r\n\r\nconst Main = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state);\r\n    console.log(state.authentication.isAdmin);\r\n    useEffect(() => {\r\n        dispatch(fetchProjects());\r\n        dispatch(fetchCategories());\r\n        dispatch(fetchSkills());\r\n        if (state.authentication.isAdmin) {\r\n            dispatch(fetchUsers())\r\n            dispatch(fetchComments());\r\n        }\r\n    }, [dispatch, state.authentication.isAdmin]);\r\n\r\n    const FrontPage = () => {\r\n        return (\r\n            <>\r\n                <Home />\r\n                <About />\r\n                <Contact />\r\n                <Projects projects={state.projects.projects}\r\n                    errMess={state.projects.errMess}\r\n                    isLoading={state.projects.isLoading} />\r\n                {/* <LatestArticles articles={(articles.articles.length > 3) ? articles.articles.slice(0, 3) : articles.articles}\r\n                errMess={articles.errMess}\r\n                isLoading={articles.isLoading} /> */}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const UpdateProjectWithId = ({ match }) => {\r\n        // console.log(\"params \", match.params.prId);\r\n        // if (state.authentication.isAdmin) {\r\n        return (\r\n            <UpdateProject project={state.projects.projects.filter((pro) => pro.id === Number(match.params.prId))[0]}\r\n                categories={state.categories.categories} />\r\n        );\r\n        // } else {\r\n        //     return null;\r\n        // }\r\n    }\r\n\r\n\r\n    const ProtectedUserRoute = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n            !state.authentication.isAuthenticated\r\n                ? <Component {...props} />\r\n                : <Redirect to={{\r\n                    pathname: '/',\r\n                    state: { from: props.location }\r\n                }} />\r\n        )} />\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const ProtectedAdminRoute = ({ component: Component, ...rest }) => (\r\n\r\n        < Route {...rest} render={(props) => (\r\n\r\n            state.authentication.isAdmin\r\n                ? <Component {...props} />\r\n                : <Redirect to={{\r\n                    pathname: '/login',\r\n                    state: { from: props.location }\r\n                }} />\r\n        )} />\r\n    )\r\n    // based the current if sign in or not\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={FrontPage} />\r\n                <ProtectedUserRoute exact path=\"/login\" component={Login} />\r\n                <ProtectedUserRoute exact path=\"/register\" component={Register} />\r\n                <ProtectedAdminRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                <ProtectedAdminRoute exact path=\"/dashboard/users\" component={Users} />\r\n                <ProtectedAdminRoute exact path=\"/dashboard/projects\" component={() => <ProjectsLit projects={state.projects} />} />\r\n                <ProtectedAdminRoute exact path=\"/dashboard/messages\" component={Comments} />\r\n                <ProtectedAdminRoute exact path=\"/dashboard/messages\" component={Comments} />\r\n                <ProtectedAdminRoute exact path=\"/dashboard/skills\" component={SkillList} />\r\n                <ProtectedAdminRoute exact path=\"/dashboard/skills/add\" component={addSkill} />\r\n                <ProtectedAdminRoute exact path=\"/dashboard/projects/add\"\r\n                    component={() => <AddProject categories={state.categories.categories} />} />\r\n                {/* <Route exact path=\"/dashboard/projects/update/:prId\" component={UpdateProjectWithId} /> */}\r\n                <ProtectedAdminRoute exact path=\"/dashboard/projects/update/:prId\" component={UpdateProjectWithId} />\r\n                <Route path=\"*\" component={() => \"404 not found\"} />\r\n            </Switch>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Main;","import * as actionsType from \"../actions\";\r\n\r\n\r\nexport const projectReducer = (state = { errMess: null, isLoading: false, projects: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionsType.ADD_PROJECTS:\r\n            return { ...state, errMess: null, isLoading: false, projects: action.data };\r\n        case actionsType.LOAD_PROJECTS:\r\n            return { ...state, isLoading: true };\r\n        case actionsType.FAILED_PROJECTS:\r\n            return { ...state, isLoading: false, errMess: action.data };\r\n        case actionsType.ADD_PRJ:\r\n            let projects = state.projects.concat(action.data);\r\n            return { ...state, projects: projects };\r\n        case actionsType.UPDATE_PRJ:\r\n            return { ...state, projects: state.projects.filter(pr => pr.id !== action.data.id).concat(action.data) };\r\n        case actionsType.DELETE_PR:\r\n            return { ...state, projects: state.projects.filter(pr => pr.id !== action.data) };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const categoryreducer = (state = { errMess: null, categories: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionsType.ADD_CATEGORIES:\r\n            return { ...state, errMess: null, categories: action.data };\r\n        case actionsType.FAILED_CATEGORIES:\r\n            return { ...state, errMess: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionsType from \"../actions\";\r\n\r\n\r\nexport const commentsReducer = (state = { errMess: null, comments: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionsType.FETCH_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.data };\r\n        case actionsType.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.data };\r\n        case actionsType.ADD_COMMENT:\r\n            console.log(\"from reducer\", action.data);\r\n            return { ...state, comments: state.comments.concat(action.data) };\r\n        case actionsType.REMOVE_MESSAGES:\r\n            return { ...state, errMess: null, comments: state.comments.filter(comm => action.data.indexOf(comm.id) === -1) };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionsType from \"../actions\";\r\n\r\n\r\nexport const Auth = (state = {\r\n    isLoading: false,\r\n    isAuthenticated: localStorage.getItem('token') ? true : false,\r\n    token: localStorage.getItem('token'),\r\n    user: localStorage.getItem('username') ? localStorage.getItem('username') : null,\r\n    errMess: null,\r\n    isAdmin: localStorage.getItem('admin') ? localStorage.getItem('admin') : false,\r\n}, action) => {\r\n    switch (action.type) {\r\n        case actionsType.REQUEST_LOGIN:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                isAuthenticated: false,\r\n                user: action.data\r\n            }\r\n        case actionsType.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                errMess: '',\r\n                token: action.data.token,\r\n                isAdmin: action.data.admin\r\n            };\r\n        case actionsType.LOGIN_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                errMess: action.data,\r\n                user: null,\r\n                isAdmin: false\r\n            }\r\n        case actionsType.REQUEST_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case actionsType.SUCCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                errMess: '',\r\n                user: null,\r\n                token: '',\r\n                isAdmin: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionsType from \"../actions\";\r\n\r\n\r\nexport const usersReducer = (state = { errMess: null, isLoading: false, users: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionsType.FETCH_USERS:\r\n            return { ...state, isLoading: false, errMess: null, users: action.data };\r\n        case actionsType.LOAD_USERS:\r\n            return { ...state, errMess: null, isLoading: true };\r\n        case actionsType.USERS_FAILED:\r\n            return { ...state, errMess: action.data, isLoading: false }\r\n        case actionsType.REMOVE_USER:\r\n            return { ...state, errMess: null, isLoading: false, users: state.users.filter(usr => action.data.indexOf(usr.id) === -1) };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionsType from \"../actions\";\r\n\r\n\r\nexport const skillsReducer = (state = { errMess: null, isLoading: false, skills: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionsType.ADD_SKILLS:\r\n            return { ...state, errMess: null, isLoading: false, skills: action.data };\r\n        case actionsType.LOAD_SKILLS:\r\n            return { ...state, isLoading: true };\r\n        case actionsType.FAILED_SKILLS:\r\n            return { ...state, isLoading: false, errMess: action.data };\r\n        case actionsType.ADD_SKILL:\r\n            let skills = state.skills.concat(action.data);\r\n            return { ...state, skills: skills };\r\n        case actionsType.UPDATE_SKILL:\r\n            return { ...state, skills: state.skills.filter(pr => pr.id !== action.data.id).concat(action.data) };\r\n        case actionsType.DELETE_SKILL:\r\n            return { ...state, skills: state.skills.filter(pr => pr.id !== action.data) };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport Main from \"./components/Main\";\nimport { cofigureStore } from \"./redux/store\";\nimport './App.less';\nimport 'react-toastify/dist/ReactToastify.css';\n// import 'antd/dist/antd.css';\nimport { Provider } from \"react-redux\";\nimport history from \"./shared/history\";\nimport { Router } from \"react-router-dom\";\nconst store = cofigureStore();\n\n\n\nstore.subscribe(() => console.log(\"current state has changed\", store.getState())\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Main />\n      </Router>\n\n    </Provider>\n\n  );\n}\n\nexport default App;\n","import { projectReducer, categoryreducer } from \"./reducer/projects\";\r\nimport { commentsReducer } from \"./reducer/comments\";\r\nimport { Auth } from \"./reducer/auth\";\r\nimport { usersReducer } from \"./reducer/users\";\r\nimport { skillsReducer } from \"./reducer/skills\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const cofigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers(\r\n            {\r\n                projects: projectReducer,\r\n                comments: commentsReducer,\r\n                categories: categoryreducer,\r\n                authentication: Auth,\r\n                users: usersReducer,\r\n                skills: skillsReducer\r\n            }),\r\n        applyMiddleware(thunk));\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}